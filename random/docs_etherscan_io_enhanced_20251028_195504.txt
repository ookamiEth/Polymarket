# Mintlify Documentation Export
Source: https://docs.etherscan.io
Platform: Mintlify (confidence: 0.8)
Exported: 2025-10-28 19:55:04
Total Pages: 99

================================================================================

## Table of Contents

1. [Get Address ERC20 Token Holding](https://docs.etherscan.io/api-reference/endpoint/addresstokenbalance.md)
2. [Get Address ERC721 Token Holding](https://docs.etherscan.io/api-reference/endpoint/addresstokennftbalance.md)
3. [Get Address ERC721 Token Inventory by Contract](https://docs.etherscan.io/api-reference/endpoint/addresstokennftinventory.md)
4. [Get Native Balance for an Address](https://docs.etherscan.io/api-reference/endpoint/balance.md)
5. [Get Historical Native Balance for an Address](https://docs.etherscan.io/api-reference/endpoint/balancehistory.md)
6. [Chainlist](https://docs.etherscan.io/api-reference/endpoint/chainlist.md)
7. [Get Ethereum Nodes Size](https://docs.etherscan.io/api-reference/endpoint/chainsize.md)
8. [Check Proxy Contract Verification Status](https://docs.etherscan.io/api-reference/endpoint/checkproxyverification.md)
9. [Check Source Code Verification Status](https://docs.etherscan.io/api-reference/endpoint/checkverifystatus.md)
10. [Get Daily Average Block Size](https://docs.etherscan.io/api-reference/endpoint/dailyavgblocksize.md)
11. [Get Daily Average Block Time](https://docs.etherscan.io/api-reference/endpoint/dailyavgblocktime.md)
12. [Get Daily Average Gas Limit](https://docs.etherscan.io/api-reference/endpoint/dailyavggaslimit.md)
13. [Get Daily Average Gas Price](https://docs.etherscan.io/api-reference/endpoint/dailyavggasprice.md)
14. [Get Daily Average Network Hash Rate](https://docs.etherscan.io/api-reference/endpoint/dailyavghashrate.md)
15. [Get Daily Average Network Difficulty](https://docs.etherscan.io/api-reference/endpoint/dailyavgnetdifficulty.md)
16. [Get Daily Block Count and Rewards](https://docs.etherscan.io/api-reference/endpoint/dailyblkcount.md)
17. [Get Daily Block Rewards](https://docs.etherscan.io/api-reference/endpoint/dailyblockrewards.md)
18. [Get Ethereum Daily Total Gas Used](https://docs.etherscan.io/api-reference/endpoint/dailygasused.md)
19. [Get Daily Network Utilization](https://docs.etherscan.io/api-reference/endpoint/dailynetutilization.md)
20. [Get Daily New Address Count](https://docs.etherscan.io/api-reference/endpoint/dailynewaddress.md)
21. [Get Daily Transaction Count](https://docs.etherscan.io/api-reference/endpoint/dailytx.md)
22. [Get Daily Network Transaction Fee](https://docs.etherscan.io/api-reference/endpoint/dailytxnfee.md)
23. [Get Daily Uncle Block Count and Rewards](https://docs.etherscan.io/api-reference/endpoint/dailyuncleblkcount.md)
24. [eth_blockNumber](https://docs.etherscan.io/api-reference/endpoint/ethblocknumber.md)
25. [eth_call](https://docs.etherscan.io/api-reference/endpoint/ethcall.md)
26. [Get Ether Historical Price](https://docs.etherscan.io/api-reference/endpoint/ethdailyprice.md)
27. [eth_estimateGas](https://docs.etherscan.io/api-reference/endpoint/ethestimategas.md)
28. [eth_gasPrice](https://docs.etherscan.io/api-reference/endpoint/ethgasprice.md)
29. [eth_getBlockByNumber](https://docs.etherscan.io/api-reference/endpoint/ethgetblockbynumber.md)
30. [eth_getBlockTransactionCountByNumber](https://docs.etherscan.io/api-reference/endpoint/ethgetblocktransactioncountbynumber.md)
31. [eth_getCode](https://docs.etherscan.io/api-reference/endpoint/ethgetcode.md)
32. [eth_getStorageAt](https://docs.etherscan.io/api-reference/endpoint/ethgetstorageat.md)
33. [eth_getTransactionByBlockNumberAndIndex](https://docs.etherscan.io/api-reference/endpoint/ethgettransactionbyblocknumberandindex.md)
34. [eth_getTransactionByHash](https://docs.etherscan.io/api-reference/endpoint/ethgettransactionbyhash.md)
35. [eth_getTransactionCount](https://docs.etherscan.io/api-reference/endpoint/ethgettransactioncount.md)
36. [eth_getTransactionReceipt](https://docs.etherscan.io/api-reference/endpoint/ethgettransactionreceipt.md)
37. [eth_getUncleByBlockNumberAndIndex](https://docs.etherscan.io/api-reference/endpoint/ethgetunclebyblocknumberandindex.md)
38. [Get Ether Last Price](https://docs.etherscan.io/api-reference/endpoint/ethprice.md)
39. [eth_sendRawTransaction](https://docs.etherscan.io/api-reference/endpoint/ethsendrawtransaction.md)
40. [Get Total Supply of Ether](https://docs.etherscan.io/api-reference/endpoint/ethsupply.md)
41. [Get Total Supply of Ether 2](https://docs.etherscan.io/api-reference/endpoint/ethsupply2.md)
42. [Export Address Tags](https://docs.etherscan.io/api-reference/endpoint/exportaddresstags.md)
43. [Get Estimation of Confirmation Time](https://docs.etherscan.io/api-reference/endpoint/gasestimate.md)
44. [Get Gas Oracle](https://docs.etherscan.io/api-reference/endpoint/gasoracle.md)
45. [Get Contract ABI](https://docs.etherscan.io/api-reference/endpoint/getabi.md)
46. [Get Nametag for an Address](https://docs.etherscan.io/api-reference/endpoint/getaddresstag.md)
47. [Get Estimated Block Countdown by Block Number](https://docs.etherscan.io/api-reference/endpoint/getblockcountdown.md)
48. [Get Block Number by Timestamp](https://docs.etherscan.io/api-reference/endpoint/getblocknobytime.md)
49. [Get Block and Uncle Rewards by Block Number](https://docs.etherscan.io/api-reference/endpoint/getblockreward.md)
50. [Get Contract Creator and Creation Tx Hash](https://docs.etherscan.io/api-reference/endpoint/getcontractcreation.md)
51. [Get Deposit Transactions by Address](https://docs.etherscan.io/api-reference/endpoint/getdeposittxs.md)
52. [Get Label Master List](https://docs.etherscan.io/api-reference/endpoint/getlabelmasterlist.md)
53. [Get Event Logs by Address](https://docs.etherscan.io/api-reference/endpoint/getlogs.md)
54. [Get Event Logs by Address and Topics](https://docs.etherscan.io/api-reference/endpoint/getlogs-address-topics.md)
55. [Get Event Logs by Topics](https://docs.etherscan.io/api-reference/endpoint/getlogs-topics.md)
56. [Get Blocks Validated by Address](https://docs.etherscan.io/api-reference/endpoint/getminedblocks.md)
57. [Get Contract Source Code](https://docs.etherscan.io/api-reference/endpoint/getsourcecode.md)
58. [Check Contract Execution Status](https://docs.etherscan.io/api-reference/endpoint/getstatus.md)
59. [Check Transaction Receipt Status](https://docs.etherscan.io/api-reference/endpoint/gettxreceiptstatus.md)
60. [Get Withdrawal Transactions by Address](https://docs.etherscan.io/api-reference/endpoint/getwithdrawaltxs.md)
61. [Get Total Nodes Count](https://docs.etherscan.io/api-reference/endpoint/nodecount.md)
62. [Get ERC1155 Token Transfers by Address](https://docs.etherscan.io/api-reference/endpoint/token1155tx.md)
63. [Get ERC20-Token Account Balance for TokenContractAddress](https://docs.etherscan.io/api-reference/endpoint/tokenbalance.md)
64. [Get Historical ERC20-Token Account Balance by BlockNo](https://docs.etherscan.io/api-reference/endpoint/tokenbalancehistory.md)
65. [Get Token Holder Count by Contract Address](https://docs.etherscan.io/api-reference/endpoint/tokenholdercount.md)
66. [Get Token Holder List by Contract Address](https://docs.etherscan.io/api-reference/endpoint/tokenholderlist.md)
67. [Get Token Info by ContractAddress](https://docs.etherscan.io/api-reference/endpoint/tokeninfo.md)
68. [Get ERC721 Token Transfers by Address](https://docs.etherscan.io/api-reference/endpoint/tokennfttx.md)
69. [Get ERC20-Token TotalSupply by ContractAddress](https://docs.etherscan.io/api-reference/endpoint/tokensupply.md)
70. [Get Historical ERC20-Token TotalSupply by ContractAddress & BlockNo](https://docs.etherscan.io/api-reference/endpoint/tokensupplyhistory.md)
71. [Get ERC20 Token Transfers by Address](https://docs.etherscan.io/api-reference/endpoint/tokentx.md)
72. [Get Top Token Holders](https://docs.etherscan.io/api-reference/endpoint/toptokenholders.md)
73. [Get Normal Transactions By Address](https://docs.etherscan.io/api-reference/endpoint/txlist.md)
74. [Get Internal Transactions by Address](https://docs.etherscan.io/api-reference/endpoint/txlistinternal.md)
75. [Get Internal Transactions by Block Range](https://docs.etherscan.io/api-reference/endpoint/txlistinternal-blockrange.md)
76. [Get Internal Transactions by Transaction Hash](https://docs.etherscan.io/api-reference/endpoint/txlistinternal-txhash.md)
77. [Get Plasma Deposits by Address](https://docs.etherscan.io/api-reference/endpoint/txnbridge.md)
78. [Get Beacon Chain Withdrawals by Address](https://docs.etherscan.io/api-reference/endpoint/txsbeaconwithdrawal.md)
79. [Verify Proxy Contract](https://docs.etherscan.io/api-reference/endpoint/verifyproxycontract.md)
80. [Verify Solidity Source Code](https://docs.etherscan.io/api-reference/endpoint/verifysourcecode.md)
81. [Verify Stylus Source Code](https://docs.etherscan.io/api-reference/endpoint/verifystylus.md)
82. [Verify Vyper Source Code](https://docs.etherscan.io/api-reference/endpoint/verifyvyper.md)
83. [Verify Source Code on zkSync](https://docs.etherscan.io/api-reference/endpoint/verifyzksyncsourcecode.md)
84. [Common Verification Errors](https://docs.etherscan.io/contract-verification/common-verification-errors.md)
85. [Verify with Foundry](https://docs.etherscan.io/contract-verification/verify-with-foundry.md)
86. [Verify with Hardhat](https://docs.etherscan.io/contract-verification/verify-with-hardhat.md)
87. [Verify with Remix](https://docs.etherscan.io/contract-verification/verify-with-remix.md)
88. [Getting an API Key](https://docs.etherscan.io/getting-an-api-key.md)
89. [Introduction](https://docs.etherscan.io/introduction.md)
90. [Introduction](https://docs.etherscan.io/mcp-docs/introduction.md)
91. [Introduction](https://docs.etherscan.io/metadata/introduction.md)
92. [Other Attributes Reference](https://docs.etherscan.io/metadata/other-attributes-reference.md)
93. [Reputation Reference](https://docs.etherscan.io/metadata/reputation-reference.md)
94. [Common Error Messages](https://docs.etherscan.io/resources/common-error-messages.md)
95. [Contact Us](https://docs.etherscan.io/resources/contact-us.md)
96. [PRO Endpoints](https://docs.etherscan.io/resources/pro-endpoints.md)
97. [Rate Limits](https://docs.etherscan.io/resources/rate-limits.md)
98. [Supported Chains](https://docs.etherscan.io/supported-chains.md)
99. [V2 Migration](https://docs.etherscan.io/v2-migration.md)

================================================================================

# Get Address ERC20 Token Holding

Source: https://docs.etherscan.io/api-reference/endpoint/addresstokenbalance.md
Extraction Method: markdown

# Get Address ERC20 Token Holding

export const chain = '1';

<Note>
  This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)
</Note>

<Warning>
  This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s
</Warning>

### Query Parameters

<ParamField query="apikey" default="YourApiKeyToken" type="string">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" default="1" type="string">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" default="account" type="string">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" default="addresstokenbalance" type="string">
  Set to `addresstokenbalance` for this endpoint.
</ParamField>

<ParamField query="address" default="0x983e3660c0bE01991785F80f266A84B911ab59b0" type="string">
  Address to check for token holdings.
</ParamField>

<ParamField query="page" default="1" type="integer">
  Page number for pagination.
</ParamField>

<ParamField query="offset" default="100" type="integer">
  Number of records per page.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=account&action=addresstokenbalance&address=0x983e3660c0bE01991785F80f266A84B911ab59b0&page=1&offset=100&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "TokenAddress": "0xffffffff2ba8f66d4e51811c5190992176930278",
        "TokenName": "Furucombo",
        "TokenSymbol": "COMBO",
        "TokenQuantity": "1861606940000000000",
        "TokenDivisor": "18",
        "TokenPriceUSD": "0.000891470000000000"
      },
      {
        "TokenAddress": "0x53a1e9912323b8016424d6287286e3b6de263f76",
        "TokenName": "PUTIN Token",
        "TokenSymbol": "PTT",
        "TokenQuantity": "3500000000000000000000",
        "TokenDivisor": "18",
        "TokenPriceUSD": "0.000000000000000000"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Address ERC721 Token Holding

Source: https://docs.etherscan.io/api-reference/endpoint/addresstokennftbalance.md
Extraction Method: markdown

# Get Address ERC721 Token Holding

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="addresstokennftbalance">
  Set to `addresstokennftbalance` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x6b52e83941eb10f9c613c395a834457559a80114">
  Address to check for NFT holdings.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="100">
  Number of records per page.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=account&action=addresstokennftbalance&address=0x6b52e83941eb10f9c613c395a834457559a80114&page=1&offset=100&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "0",
    "message": "NOTOK",
    "result": "Maximum rate limit reached"
  }
  ```
</ResponseExample>


================================================================================

# Get Address ERC721 Token Inventory by Contract

Source: https://docs.etherscan.io/api-reference/endpoint/addresstokennftinventory.md
Extraction Method: markdown

# Get Address ERC721 Token Inventory by Contract

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="addresstokennftinventory">
  Set to `addresstokennftinventory` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x123432244443b54409430979df8333f9308a6040">
  Address to check for inventory.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xed5af388653567af2f388e6224dc7c4b3241c544">
  ERC-721 token contract address to filter by.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="100">
  Number of records per page. Limited to 1000 records per query; use the `page` parameter for subsequent records.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=account&action=addresstokennftinventory&address=0x123432244443b54409430979df8333f9308a6040&contractaddress=0xed5af388653567af2f388e6224dc7c4b3241c544&page=1&offset=100&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "TokenAddress": "0xed5af388653567af2f388e6224dc7c4b3241c544",
        "TokenId": "453"
      },
      {
        "TokenAddress": "0xed5af388653567af2f388e6224dc7c4b3241c544",
        "TokenId": "8160"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Native Balance for an Address

Source: https://docs.etherscan.io/api-reference/endpoint/balance.md
Extraction Method: markdown

# Get Native Balance for an Address

export const TryEndpointLink = ({href, label = 'Try this endpoint in your', linkText = 'browser'}) => {
  if (!href) {
    return null;
  }
  const isExternal = (/^https?:/i).test(href);
  return <p className="mt-4 text-base font-medium text-zinc-900 dark:text-zinc-100">
      {label}{' '}
      <a href={href} className="font-semibold text-primary-600 hover:underline" target={isExternal ? '_blank' : undefined} rel={isExternal ? 'noopener noreferrer' : undefined}>
        {linkText}
      </a>
      .
    </p>;
};

export const chainCurrency = 'ETH';

export const chain = '1';

### Query Parameters

<ParamField query="apikey" default="YourApiKeyToken" type="string">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" default="1" type="string">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" default="account" type="string">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" default="balance" type="string">
  Set to `balance` for this endpoint.
</ParamField>

<ParamField query="address" default="0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae" type="string">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`. Up to 20 addresses can be queried, separated by commas.
</ParamField>

<ParamField query="tag" default="latest" type="string">
  Use `latest` for the last block number of the chain. Also accepts a specific block number in hex format, like `0x10d4f` up to the last 128 blocks. For historical balances, use the [Historical Balance](/api-reference/endpoint/balancehistory) endpoint.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
     "status":"1",
     "message":"OK",
     "result":"172774397764084972158218"
  }
  ```
</ResponseExample>


================================================================================

# Get Historical Native Balance for an Address

Source: https://docs.etherscan.io/api-reference/endpoint/balancehistory.md
Extraction Method: markdown

# Get Historical Native Balance for an Address

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="balancehistory">
  Set to `balancehistory` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`.
</ParamField>

<ParamField query="blockno" type="integer" default="8000000">
  Block number to check balance at, all the way up to the genesis block `0`.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "610538078574759898951277"
  }
  ```
</ResponseExample>


================================================================================

# Chainlist

Source: https://docs.etherscan.io/api-reference/endpoint/chainlist.md
Extraction Method: markdown

# Chainlist

### Query Parameters

No parameters required.

<ResponseExample>
  ```json Response theme={null}
  {
    "comments": "List of API endpoints maintained by Etherscan EAAS. Available Status codes are (0)=Offline, (1)=Ok, (2)=Degraded",
    "totalcount": 67,
    "result": [
      {
        "chainname": "Ethereum Mainnet",
        "chainid": "1",
        "blockexplorer": "https://etherscan.io/",
        "apiurl": "https://api.etherscan.io/v2/api?chainid=1",
        "status": 1,
        "comment": ""
      },
      {
        "chainname": "Sepolia Testnet",
        "chainid": "11155111",
        "blockexplorer": "https://sepolia.etherscan.io/",
        "apiurl": "https://api.etherscan.io/v2/api?chainid=11155111",
        "status": 1,
        "comment": ""
      },
      {
        "chainname": "Base Mainnet",
        "chainid": "8453",
        "blockexplorer": "https://basescan.org/",
        "apiurl": "https://api.etherscan.io/v2/api?chainid=8453",
        "status": 1,
        "comment": ""
      },
      {
        "chainname": "Polygon Mainnet",
        "chainid": "137",
        "blockexplorer": "https://polygonscan.com/",
        "apiurl": "https://api.etherscan.io/v2/api?chainid=137",
        "status": 1,
        "comment": ""
      },
      {
        "chainname": "Arbitrum One Mainnet",
        "chainid": "42161",
        "blockexplorer": "https://arbiscan.io/",
        "apiurl": "https://api.etherscan.io/v2/api?chainid=42161",
        "status": 1,
        "comment": ""
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Ethereum Nodes Size

Source: https://docs.etherscan.io/api-reference/endpoint/chainsize.md
Extraction Method: markdown

# Get Ethereum Nodes Size

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="chainsize">
  Set to `chainsize` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="clienttype" type="string" default="geth">
  Node client to query, either `geth` or `parity`.
</ParamField>

<ParamField query="syncmode" type="string" default="default">
  Node type to run, either `default` or `archive`.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=chainsize&startdate=2019-02-01&enddate=2019-02-28&clienttype=geth&syncmode=default&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "7156164",
        "chainTimeStamp": "2019-02-01",
        "chainSize": "184726421279",
        "clientType": "Geth",
        "syncMode": "Default"
      },
      {
        "blockNumber": "7161012",
        "chainTimeStamp": "2019-02-02",
        "chainSize": "184726654448",
        "clientType": "Geth",
        "syncMode": "Default"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Check Proxy Contract Verification Status

Source: https://docs.etherscan.io/api-reference/endpoint/checkproxyverification.md
Extraction Method: markdown

# Check Proxy Contract Verification Status

> Check the status of a proxy contract verification.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="checkproxyverification">
  Set to `checkproxyverification` for this endpoint.
</ParamField>

<ParamField query="guid" type="string" default="gwgrrnfy56zf6vc1fljuejwg6pelnc5yns6fg6y2i6zfpgzquz">
  The GUID received from the proxy verification request.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "0",
    "message": "NOTOK",
    "result": "The proxy contract at 0xcbdcd3815b5f975e1a2c944a9b2cd1c985a1cb7f does not seem to be verified. Please verify and publish the contract source before proceeding with this proxy verification."
  }
  ```
</ResponseExample>


================================================================================

# Check Source Code Verification Status

Source: https://docs.etherscan.io/api-reference/endpoint/checkverifystatus.md
Extraction Method: markdown

# Check Source Code Verification Status

> Check the status of a source code verification request.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="checkverifystatus">
  Set to `checkverifystatus` for this endpoint.
</ParamField>

<ParamField query="guid" type="string" default="x3ryqcqr1zdknhfhkimqmizlcqpxncqc6nrvp3pgrcpfsqedqi">
  The GUID received from the verification request.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "Pass - Verified"
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Block Size

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavgblocksize.md
Extraction Method: markdown

# Get Daily Average Block Size

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavgblocksize">
  Set to `dailyavgblocksize` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order, either `asc` or `desc`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavgblocksize&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "blockSize_bytes": 20373
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "blockSize_bytes": 17499
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Block Time

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavgblocktime.md
Extraction Method: markdown

# Get Daily Average Block Time

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavgblocktime">
  Set to `dailyavgblocktime` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order, either `asc` or `desc`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavgblocktime&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "blockTime_sec": "17.67"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "blockTime_sec": "17.41"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Gas Limit

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavggaslimit.md
Extraction Method: markdown

# Get Daily Average Gas Limit

> Retrieve historical daily average gas limit.

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavggaslimit">
  Set to `dailyavggaslimit` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavggaslimit&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "gasLimit": "8001360"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "gasLimit": "8001269"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Gas Price

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavggasprice.md
Extraction Method: markdown

# Get Daily Average Gas Price

> Retrieve daily average gas price statistics.

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavggasprice">
  Set to `dailyavggasprice` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavggasprice&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "maxGasPrice_Wei": "60814303896257",
        "minGasPrice_Wei": "432495",
        "avgGasPrice_Wei": "13234562600"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "maxGasPrice_Wei": "20000000000000",
        "minGasPrice_Wei": "2352",
        "avgGasPrice_Wei": "12000569516"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Network Hash Rate

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavghashrate.md
Extraction Method: markdown

# Get Daily Average Network Hash Rate

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavghashrate">
  Set to `dailyavghashrate` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavghashrate&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "networkHashRate": "143116.0140"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "networkHashRate": "143036.2313"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Average Network Difficulty

Source: https://docs.etherscan.io/api-reference/endpoint/dailyavgnetdifficulty.md
Extraction Method: markdown

# Get Daily Average Network Difficulty

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyavgnetdifficulty">
  Set to `dailyavgnetdifficulty` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyavgnetdifficulty&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "networkDifficulty": "2,408.028"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "networkDifficulty": "2,358.910"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Block Count and Rewards

Source: https://docs.etherscan.io/api-reference/endpoint/dailyblkcount.md
Extraction Method: markdown

# Get Daily Block Count and Rewards

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyblkcount">
  Set to `dailyblkcount` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order, either `asc` or `desc`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyblkcount&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "blockCount": 4848,
        "blockRewards_Eth": "14929.464690870590355682"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "blockCount": 4935,
        "blockRewards_Eth": "15120.386084685869906669"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Block Rewards

Source: https://docs.etherscan.io/api-reference/endpoint/dailyblockrewards.md
Extraction Method: markdown

# Get Daily Block Rewards

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyblockrewards">
  Set to `dailyblockrewards` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order, either `asc` or `desc`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyblockrewards&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "blockRewards_Eth": "15300.65625"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "blockRewards_Eth": "15611.625"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Ethereum Daily Total Gas Used

Source: https://docs.etherscan.io/api-reference/endpoint/dailygasused.md
Extraction Method: markdown

# Get Ethereum Daily Total Gas Used

> Retrieve the total gas used each day.

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailygasused">
  Set to `dailygasused` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailygasused&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "gasUsed": "32761450415"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "gasUsed": "30168904532"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Network Utilization

Source: https://docs.etherscan.io/api-reference/endpoint/dailynetutilization.md
Extraction Method: markdown

# Get Daily Network Utilization

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailynetutilization">
  Set to `dailynetutilization` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailynetutilization&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "networkUtilization": "0.8464"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "networkUtilization": "0.7687"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily New Address Count

Source: https://docs.etherscan.io/api-reference/endpoint/dailynewaddress.md
Extraction Method: markdown

# Get Daily New Address Count

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailynewaddress">
  Set to `dailynewaddress` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailynewaddress&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "newAddressCount": 54081
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "newAddressCount": 65152
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Transaction Count

Source: https://docs.etherscan.io/api-reference/endpoint/dailytx.md
Extraction Method: markdown

# Get Daily Transaction Count

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailytx">
  Set to `dailytx` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailytx&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "transactionCount": 498856
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "transactionCount": 450314
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Network Transaction Fee

Source: https://docs.etherscan.io/api-reference/endpoint/dailytxnfee.md
Extraction Method: markdown

# Get Daily Network Transaction Fee

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailytxnfee">
  Set to `dailytxnfee` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailytxnfee&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "transactionFee_Eth": "358.558440870590355682"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "transactionFee_Eth": "286.886084685869906669"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Daily Uncle Block Count and Rewards

Source: https://docs.etherscan.io/api-reference/endpoint/dailyuncleblkcount.md
Extraction Method: markdown

# Get Daily Uncle Block Count and Rewards

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="dailyuncleblkcount">
  Set to `dailyuncleblkcount` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order, either `asc` or `desc`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=dailyuncleblkcount&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "uncleBlockCount": 287,
        "uncleBlockRewards_Eth": "729.75"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "uncleBlockCount": 304,
        "uncleBlockRewards_Eth": "778.125"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# eth_blockNumber

Source: https://docs.etherscan.io/api-reference/endpoint/ethblocknumber.md
Extraction Method: markdown

# eth_blockNumber

> Fetch the latest block number.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_blockNumber">
  Set to `eth_blockNumber` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_blockNumber&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 83,
    "result": "0x1661760"
  }
  ```
</ResponseExample>


================================================================================

# eth_call

Source: https://docs.etherscan.io/api-reference/endpoint/ethcall.md
Extraction Method: markdown

# eth_call

> Execute a call without creating a transaction.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_call">
  Set to `eth_call` for this endpoint.
</ParamField>

<ParamField query="to" type="string" default="0xAEEF46DB4855E25702F8237E8f403FddcaF931C0">
  The address to interact with.
</ParamField>

<ParamField query="data" type="string" default="0x70a08231000000000000000000000000e16359506c028e51f16be38986ec5746251e9724">
  Hash of the method signature and encoded parameters.
</ParamField>

<ParamField query="tag" type="string" default="latest">
  Use `latest`, `earliest`, `pending`, or a block number in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_call&to=0xAEEF46DB4855E25702F8237E8f403FddcaF931C0&data=0x70a08231000000000000000000000000e16359506c028e51f16be38986ec5746251e9724&tag=latest&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x00000000000000000000000000000000000000000000000000601d8888141c00"
  }
  ```
</ResponseExample>


================================================================================

# Get Ether Historical Price

Source: https://docs.etherscan.io/api-reference/endpoint/ethdailyprice.md
Extraction Method: markdown

# Get Ether Historical Price

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="ethdailyprice">
  Set to `ethdailyprice` for this endpoint.
</ParamField>

<ParamField query="startdate" type="string" default="2019-02-01">
  Starting date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="enddate" type="string" default="2019-02-28">
  Ending date in `yyyy-MM-dd` format.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest results first or `asc` for the oldest results first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=ethdailyprice&startdate=2019-02-01&enddate=2019-02-28&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "UTCDate": "2019-02-01",
        "unixTimeStamp": "1548979200",
        "value": "107.03"
      },
      {
        "UTCDate": "2019-02-02",
        "unixTimeStamp": "1549065600",
        "value": "111.00"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# eth_estimateGas

Source: https://docs.etherscan.io/api-reference/endpoint/ethestimategas.md
Extraction Method: markdown

# eth_estimateGas

> Estimate the gas required for a transaction.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_estimateGas">
  Set to `eth_estimateGas` for this endpoint.
</ParamField>

<ParamField query="data" type="string" default="0x4e71d92d">
  Hash of the method signature and encoded parameters.
</ParamField>

<ParamField query="to" type="string" default="0xf0160428a8552ac9bb7e050d90eeade4ddd52843">
  The address to interact with.
</ParamField>

<ParamField query="value" type="string" default="0xff22">
  Value sent in this transaction, in hex.
</ParamField>

<ParamField query="gasPrice" type="string" default="0x51da038cc">
  Gas price in wei.
</ParamField>

<ParamField query="gas" type="string" default="0x5f5e0ff">
  Gas limit provided for the transaction, in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_estimateGas&data=0x4e71d92d&to=0xf0160428a8552ac9bb7e050d90eeade4ddd52843&value=0xff22&gasPrice=0x51da038cc&gas=0x5f5e0ff&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x66ac"
  }
  ```
</ResponseExample>


================================================================================

# eth_gasPrice

Source: https://docs.etherscan.io/api-reference/endpoint/ethgasprice.md
Extraction Method: markdown

# eth_gasPrice

> Get the current gas price.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_gasPrice">
  Set to `eth_gasPrice` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_gasPrice&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 73,
    "result": "0x1d9d2db2"
  }
  ```
</ResponseExample>


================================================================================

# eth_getBlockByNumber

Source: https://docs.etherscan.io/api-reference/endpoint/ethgetblockbynumber.md
Extraction Method: markdown

# eth_getBlockByNumber

> Get block information by number.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getBlockByNumber">
  Set to `eth_getBlockByNumber` for this endpoint.
</ParamField>

<ParamField query="tag" type="string" default="0x10d4f">
  Block number in hex format.
</ParamField>

<ParamField query="boolean" type="string" default="true">
  Set to `true` to return full transaction objects or `false` for transaction hashes only.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getBlockByNumber&tag=0x10d4f&boolean=true&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": {
      "difficulty": "0x1d95715bd14",
      "extraData": "0x",
      "gasLimit": "0x2fefd8",
      "gasUsed": "0x5208",
      "hash": "0x7eb7c23a5ac2f2d70aa1ba4e5c56d89de5ac993590e5f6e79c394e290d998ba8",
      "logsBloom": "0x
      "miner": "0xf927a40c8b7f6e07c5af7fa2155b4864a4112b13",
      "mixHash": "0x13dd2c8aec729f75aebcd79a916ecb0f7edc6493efcc6a4da8d7b0ab3ee88444",
      "nonce": "0xc60a782e2e69ce22",
      "number": "0x10d4f",
      "parentHash": "0xf8d01370e6e274f8188954fbee435b40c35b2ad3d4ab671f6d086cd559e48f04",
      "receiptsRoot": "0x0c44b7ed0fefb613ec256341aa0ffdb643e869e3a0ebc8f58e36b4e47efedd33",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "size": "0x275",
      "stateRoot": "0xd64a0f63e2c7f541e6e6f8548a10a5c4e49fda7ac1aa80f9dddef648c7b9e25f",
      "timestamp": "0x55c9ea07",
      "transactions": [
        {
          "blockHash": "0x7eb7c23a5ac2f2d70aa1ba4e5c56d89de5ac993590e5f6e79c394e290d998ba8",
          "blockNumber": "0x10d4f",
          "from": "0x4458f86353b4740fe9e09071c23a7437640063c9",
          "gas": "0x5208",
          "gasPrice": "0xba43b7400",
          "hash": "0xa442249820de6be754da81eafbd44a865773e4b23d7c0522d31fd03977823008",
          "input": "0x",
          "nonce": "0x1",
          "to": "0xbf3403210f9802205f426759947a80a9fda71b1e",
          "transactionIndex": "0x0",
          "value": "0xaa9f075c200000",
          "type": "0x0",
          "v": "0x1b",
          "r": "0x2c2789c6704ba2606e200e1ba4fd17ba4f0e0f94abe32a12733708c3d3442616",
          "s": "0x2946f47e3ece580b5b5ecb0f8c52604fa5f60aeb4103fc73adcbf6d620f9872b"
        }
      ],
      "transactionsRoot": "0x4a5b78c13d11559c9541576834b5172fe8b18507c0f9f76454fcdddedd8dff7a",
      "uncles": []
    }
  }
  ```
</ResponseExample>


================================================================================

# eth_getBlockTransactionCountByNumber

Source: https://docs.etherscan.io/api-reference/endpoint/ethgetblocktransactioncountbynumber.md
Extraction Method: markdown

# eth_getBlockTransactionCountByNumber

> Get the number of transactions in a block.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getBlockTransactionCountByNumber">
  Set to `eth_getBlockTransactionCountByNumber` for this endpoint.
</ParamField>

<ParamField query="tag" type="string" default="0x10FB78">
  Block number in hex format.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getBlockTransactionCountByNumber&tag=0x10FB78&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x3"
  }
  ```
</ResponseExample>


================================================================================

# eth_getCode

Source: https://docs.etherscan.io/api-reference/endpoint/ethgetcode.md
Extraction Method: markdown

# eth_getCode

> Get the code stored at an address.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getCode">
  Set to `eth_getCode` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xf75e354c5edc8efed9b59ee9f67a80845ade7d0c">
  The address to query.
</ParamField>

<ParamField query="tag" type="string" default="latest">
  Use `latest`, `earliest`, `pending`, or a block number in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getCode&address=0xf75e354c5edc8efed9b59ee9f67a80845ade7d0c&tag=latest&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x3660008037602060003660003473273930d21e01ee25e4c219b63259d214872220a261235a5a03f21560015760206000f3"
  }
  ```
</ResponseExample>


================================================================================

# eth_getStorageAt

Source: https://docs.etherscan.io/api-reference/endpoint/ethgetstorageat.md
Extraction Method: markdown

# eth_getStorageAt

> Get the value at a storage position.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getStorageAt">
  Set to `eth_getStorageAt` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x6e03d9cce9d60f3e9f2597e13cd4c54c55330cfd">
  The address to query.
</ParamField>

<ParamField query="position" type="string" default="0x0">
  Storage position in hex.
</ParamField>

<ParamField query="tag" type="string" default="latest">
  Use `latest`, `earliest`, `pending`, or a block number in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getStorageAt&address=0x6e03d9cce9d60f3e9f2597e13cd4c54c55330cfd&position=0x0&tag=latest&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x0000000000000000000000000000000000000000000000000000000000000000"
  }
  ```
</ResponseExample>


================================================================================

# eth_getTransactionByBlockNumberAndIndex

Source: https://docs.etherscan.io/api-reference/endpoint/ethgettransactionbyblocknumberandindex.md
Extraction Method: markdown

# eth_getTransactionByBlockNumberAndIndex

> Get transaction details by block number and index.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getTransactionByBlockNumberAndIndex">
  Set to `eth_getTransactionByBlockNumberAndIndex` for this endpoint.
</ParamField>

<ParamField query="tag" type="string" default="0xC6331D">
  Block number in hex format.
</ParamField>

<ParamField query="index" type="string" default="0x11A">
  Transaction index position in the block, in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getTransactionByBlockNumberAndIndex&tag=0xC6331D&index=0x11A&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": {
      "blockHash": "0x13c5311a78b9a8790c58f1d0d0660226352a498cc98b06e1861f1967d3a9d1b4",
      "blockNumber": "0xc6331d",
      "from": "0xd1af036d589b6ebfbaa184b339a30d32ef611708",
      "gas": "0x11170",
      "gasPrice": "0x5b7e259a7",
      "maxFeePerGas": "0x5b7e259a7",
      "maxPriorityFeePerGas": "0x5b7e259a7",
      "hash": "0xc7ef51f0bfe85eefbb1d4d88f5a39e82fbfc94987d8cbcb515f74d80b6e44902",
      "input": "0x2d2da806000000000000000000000000d1af036d589b6ebfbaa184b339a30d32ef611708",
      "nonce": "0x0",
      "to": "0xabea9132b05a70803a4e85094fd0e1800777fbef",
      "transactionIndex": "0x11a",
      "value": "0x57930b5db6a000",
      "type": "0x2",
      "accessList": [],
      "chainId": "0x1",
      "v": "0x0",
      "r": "0x595619be17755f7427d07626275e4c89b8f9d5a0a668515165ea000d30f26325",
      "s": "0x33d4b22c7c779fc9f04c81788cb4268d2c3f8dc9e219245570bdd384c6ca6690",
      "yParity": "0x0"
    }
  }
  ```
</ResponseExample>


================================================================================

# eth_getTransactionByHash

Source: https://docs.etherscan.io/api-reference/endpoint/ethgettransactionbyhash.md
Extraction Method: markdown

# eth_getTransactionByHash

> Get transaction details by hash.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getTransactionByHash">
  Set to `eth_getTransactionByHash` for this endpoint.
</ParamField>

<ParamField query="txhash" type="string" default="0xbc78ab8a9e9a0bca7d0321a27b2c03addeae08ba81ea98b03cd3dd237eabed44">
  The transaction hash to query.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getTransactionByHash&txhash=0xbc78ab8a9e9a0bca7d0321a27b2c03addeae08ba81ea98b03cd3dd237eabed44&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": {
      "blockHash": "0xf850331061196b8f2b67e1f43aaa9e69504c059d3d3fb9547b04f9ed4d141ab7",
      "blockNumber": "0xcf2420",
      "from": "0x00192fb10df37c9fb26829eb2cc623cd1bf599e8",
      "gas": "0x5208",
      "gasPrice": "0x19f017ef49",
      "maxFeePerGas": "0x1f6ea08600",
      "maxPriorityFeePerGas": "0x3b9aca00",
      "hash": "0xbc78ab8a9e9a0bca7d0321a27b2c03addeae08ba81ea98b03cd3dd237eabed44",
      "input": "0x",
      "nonce": "0x33b79d",
      "to": "0xc67f4e626ee4d3f272c2fb31bad60761ab55ed9f",
      "transactionIndex": "0x5b",
      "value": "0x19755d4ce12c00",
      "type": "0x2",
      "accessList": [],
      "chainId": "0x1",
      "v": "0x0",
      "r": "0xa681faea68ff81d191169010888bbbe90ec3eb903e31b0572cd34f13dae281b9",
      "s": "0x3f59b0fa5ce6cf38aff2cfeb68e7a503ceda2a72b4442c7e2844d63544383e3",
      "yParity": "0x0"
    }
  }
  ```
</ResponseExample>


================================================================================

# eth_getTransactionCount

Source: https://docs.etherscan.io/api-reference/endpoint/ethgettransactioncount.md
Extraction Method: markdown

# eth_getTransactionCount

> Get the number of transactions sent from an address.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getTransactionCount">
  Set to `eth_getTransactionCount` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x4bd5900Cb274ef15b153066D736bf3e83A9ba44e">
  The address to query.
</ParamField>

<ParamField query="tag" type="string" default="latest">
  Use `latest`, `earliest`, `pending`, or a block number in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getTransactionCount&address=0x4bd5900Cb274ef15b153066D736bf3e83A9ba44e&tag=latest&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": "0x73"
  }
  ```
</ResponseExample>


================================================================================

# eth_getTransactionReceipt

Source: https://docs.etherscan.io/api-reference/endpoint/ethgettransactionreceipt.md
Extraction Method: markdown

# eth_getTransactionReceipt

> Get the receipt of a transaction by hash.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getTransactionReceipt">
  Set to `eth_getTransactionReceipt` for this endpoint.
</ParamField>

<ParamField query="txhash" type="string" default="0xadb8aec59e80db99811ac4a0235efa3e45da32928bcff557998552250fa672eb">
  The transaction hash to query.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getTransactionReceipt&txhash=0xadb8aec59e80db99811ac4a0235efa3e45da32928bcff557998552250fa672eb&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": {
      "blockHash": "0x07c17710dbb7514e92341c9f83b4aab700c5dba7c4fb98caadd7926a32e47799",
      "blockNumber": "0xcf2427",
      "contractAddress": null,
      "cumulativeGasUsed": "0xeb67d5",
      "effectiveGasPrice": "0x1a96b24c26",
      "from": "0x292f04a44506c2fd49bac032e1ca148c35a478c8",
      "gasUsed": "0xb41d",
      "logs": [
        {
          "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
          "topics": [
            "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "0x000000000000000000000000292f04a44506c2fd49bac032e1ca148c35a478c8",
            "0x000000000000000000000000ab6960a6511ff18ed8b8c012cb91c7f637947fc0"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000000000013f81a6",
          "blockNumber": "0xcf2427",
          "transactionHash": "0xadb8aec59e80db99811ac4a0235efa3e45da32928bcff557998552250fa672eb",
          "transactionIndex": "0x122",
          "blockHash": "0x07c17710dbb7514e92341c9f83b4aab700c5dba7c4fb98caadd7926a32e47799",
          "logIndex": "0xdb",
          "removed": false
        }
      ],
      "logsBloom": "0x
      "status": "0x1",
      "to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
      "transactionHash": "0xadb8aec59e80db99811ac4a0235efa3e45da32928bcff557998552250fa672eb",
      "transactionIndex": "0x122",
      "type": "0x2"
    }
  }
  ```
</ResponseExample>


================================================================================

# eth_getUncleByBlockNumberAndIndex

Source: https://docs.etherscan.io/api-reference/endpoint/ethgetunclebyblocknumberandindex.md
Extraction Method: markdown

# eth_getUncleByBlockNumberAndIndex

> Get uncle block details by block number and index.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_getUncleByBlockNumberAndIndex">
  Set to `eth_getUncleByBlockNumberAndIndex` for this endpoint.
</ParamField>

<ParamField query="tag" type="string" default="0xC63276">
  Block number in hex format.
</ParamField>

<ParamField query="index" type="string" default="0x0">
  Position of the uncle in the block, in hex.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_getUncleByBlockNumberAndIndex&tag=0xC63276&index=0x0&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "result": {
      "baseFeePerGas": "0x65a42b13c",
      "difficulty": "0x1b1457a8247bbb",
      "extraData": "0x486976656f6e2063612d68656176792059476f6e",
      "gasLimit": "0x1ca359a",
      "gasUsed": "0xb48fe1",
      "hash": "0x1da88e3581315d009f1cb600bf06f509cd27a68cb3d6437bda8698d04089f14a",
      "logsBloom": "0xf1a360ca505cdda510d810c1c81a03b51a8a508ed601811084833072945290235c8721e012182e40d57df552cf00f1f01bc498018da19e008681832b43762a30c26e11709948a9b96883a42ad02568e3fcc3000004ee12813e4296498261619992c40e22e60bd95107c5bd8462fcca570a0095d52a4c24720b00f13a2c3d62aca81e852017470c109643b15041fd69742406083d67654fc841a18b405ab380e06a8c14c0138b6602ea8f48b2cd90ac88c3478212011136802900264718a085047810221225080dfb2c214010091a6f233883bb0084fa1c197330a10bb0006686e678b80e50e4328000041c218d1458880181281765d28d51066058f3f80a7822",
      "miner": "0x1ad91ee08f21be3de0ba2ba6918e714da6b45836",
      "mixHash": "0xa8e1dbbf073614c7ed05f44b9e92fbdb3e1d52575ed8167fa57f934210bbb0a2",
      "nonce": "0x28cc3e5b7bee9866",
      "number": "0xc63274",
      "parentHash": "0x496dae3e722efdd9ee1eb69499bdc7ed0dca54e13cd1157a42811c442f01941f",
      "receiptsRoot": "0x9c9a7a99b4af7607691a7f2a50d474290385c0a6f39c391131ea0c67307213f4",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "size": "0x224",
      "stateRoot": "0xde9a11f0ee321390c1a7843cab7b9ffd3779d438bc8f77de4361dfe2807d7dee",
      "timestamp": "0x6110bd1a",
      "transactionsRoot": "0xa04a79e531db3ec373cb63e9ebfbc9c95525de6347958918a273675d4f221575",
      "uncles": []
    }
  }
  ```
</ResponseExample>


================================================================================

# Get Ether Last Price

Source: https://docs.etherscan.io/api-reference/endpoint/ethprice.md
Extraction Method: markdown

# Get Ether Last Price

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="ethprice">
  Set to `ethprice` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=ethprice&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "ethbtc": "0.0368322132423383",
      "ethbtc_timestamp": "1759139509",
      "ethusd": "4129.30651044757",
      "ethusd_timestamp": "1759139509"
    }
  }
  ```
</ResponseExample>


================================================================================

# eth_sendRawTransaction

Source: https://docs.etherscan.io/api-reference/endpoint/ethsendrawtransaction.md
Extraction Method: markdown

# eth_sendRawTransaction

> Broadcast a signed transaction to the network.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="proxy">
  Set to `proxy` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="eth_sendRawTransaction">
  Set to `eth_sendRawTransaction` for this endpoint.
</ParamField>

<ParamField query="hex" type="string" default="0xf904808000831cfde080">
  The signed raw transaction data to broadcast.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=proxy&action=eth_sendRawTransaction&hex=0xf904808000831cfde080&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "jsonrpc": "2.0",
    "id": 1,
    "error": {
      "code": -32000,
      "message": "rlp: value size exceeds available input length"
    }
  }
  ```
</ResponseExample>


================================================================================

# Get Total Supply of Ether

Source: https://docs.etherscan.io/api-reference/endpoint/ethsupply.md
Extraction Method: markdown

# Get Total Supply of Ether

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="ethsupply">
  Set to `ethsupply` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=ethsupply&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "122373866217800000000000000"
  }
  ```
</ResponseExample>


================================================================================

# Get Total Supply of Ether 2

Source: https://docs.etherscan.io/api-reference/endpoint/ethsupply2.md
Extraction Method: markdown

# Get Total Supply of Ether 2

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="ethsupply2">
  Set to `ethsupply2` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=ethsupply2&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "EthSupply": "122373866217800000000000000",
      "Eth2Staking": "2940327167090033000000000",
      "BurntFees": "4610942856337430575173814",
      "WithdrawnTotal": "7618584348954597000000000"
    }
  }
  ```
</ResponseExample>


================================================================================

# Export Address Tags

Source: https://docs.etherscan.io/api-reference/endpoint/exportaddresstags.md
Extraction Method: markdown

# Export Address Tags

<Note>This is a PRO endpoint, available to the [Enterprise tier](https://etherscan.io/apis)</Note>

<Warning>This endpoint is throttled to 2 calls/s and 100 calls/day</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="module" type="string" default="nametag">
  Set to `nametag` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="exportaddresstags">
  Set to `exportaddresstags` for this endpoint.
</ParamField>

<ParamField query="label" type="string" default="ofac-sanctioned">
  Use the [Label Master List](/api-reference/endpoint/getlabelmasterlist) to discover categeories like `phish-hack`, or pass `all` to export every label.
</ParamField>

<ParamField query="format" type="string" default="csv">
  The response format, currently only in `.csv`.
</ParamField>

<ResponseExample>
  ```csv Response theme={null}
  "address";"nametag";"internal_nametag";"url";"shortdescription";"notes_1";"notes_2";"labels";"labels_slug";"reputation";"other_attributes";"lastupdatedtimestamp"
  "0x0000000000000000000000000000000000001111";"Fake_Phishing589039";"";"";"";"There are reports that this address was used in a Phishing scam. Please exercise caution when interacting with it. Reported by HashDit.";"";"Phish / Hack";"phish-hack";"2";"";"1728292621"
  "0x00000000001adc2c0b202d0f72ad9d50f0675296";"Fake_Phishing1334182";"";"";"";"There are reports that this address was used in a Phishing scam. Please exercise caution when interacting with it. Reported by BlockSec.";"";"Phish / Hack";"phish-hack";"2";"";"1757057505"
  "0x00000000006a2b6820feb8d5ac00cb6800795d8f";"Fake_Phishing326507";"";"";"";"There are reports that this address was used in a Phishing scam. Please exercise caution when interacting with it.";"";"Phish / Hack";"phish-hack";"2";"";"1711418316"
  "0x0000000000d67e5d5f991a40f04ed40fa3b150df";"Fake_Phishing326508";"";"";"";"There are reports that this address was used in a Phishing scam. Please exercise caution when interacting with it.";"";"Phish / Hack";"phish-hack";"2";"";"1711418362"
  "0x0000000000e7f7e18e6b7890ea1227ff088e6653";"Fake_Phishing686515";"";"";"";"There are reports that this address was used in a Phishing scam. Please exercise caution when interacting with it. Reported by ScamSniffer.";"";"Phish / Hack";"phish-hack";"2";"";"1734599538"
  "0x00000000020e203eb8fc5d0724e7c93e6b002c71";"Fake_Phishing119146";"";"";"";"Warning! This address may be attempting to impersonate a similar looking address. Please proceed with caution.";"";"Phish / Hack";"phish-hack";"2";"";"1738570688"
  ```
</ResponseExample>


================================================================================

# Get Estimation of Confirmation Time

Source: https://docs.etherscan.io/api-reference/endpoint/gasestimate.md
Extraction Method: markdown

# Get Estimation of Confirmation Time

> Estimate confirmation time based on a provided gas price.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="gastracker">
  Set to `gastracker` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="gasestimate">
  Set to `gasestimate` for this endpoint.
</ParamField>

<ParamField query="gasprice" type="string" default="2000000000">
  Gas price paid per unit of gas, in wei.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=gastracker&action=gasestimate&gasprice=2000000000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "45"
  }
  ```
</ResponseExample>


================================================================================

# Get Gas Oracle

Source: https://docs.etherscan.io/api-reference/endpoint/gasoracle.md
Extraction Method: markdown

# Get Gas Oracle

> Get current gas price recommendations.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="gastracker">
  Set to `gastracker` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="gasoracle">
  Set to `gasoracle` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=gastracker&action=gasoracle&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "LastBlock": "23467872",
      "SafeGasPrice": "0.496839934",
      "ProposeGasPrice": "0.496840168",
      "FastGasPrice": "0.55411917",
      "suggestBaseFee": "0.496839934",
      "gasUsedRatio": "0.405942555555556,0.784013777777778,0.502624148542588,0.719479644444444,0.45673524947105"
    }
  }
  ```
</ResponseExample>


================================================================================

# Get Contract ABI

Source: https://docs.etherscan.io/api-reference/endpoint/getabi.md
Extraction Method: markdown

# Get Contract ABI

> Retrieve the ABI for a verified smart contract.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getabi">
  Set to `getabi` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413">
  The contract address to query.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "[{\"constant\":false,\"inputs\":[{\"name\":\"_c\",\"type\":\"string\"}],\"name\":\"enterValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"
  }
  ```
</ResponseExample>


================================================================================

# Get Nametag for an Address

Source: https://docs.etherscan.io/api-reference/endpoint/getaddresstag.md
Extraction Method: markdown

# Get Nametag for an Address

<Note>This is a PRO endpoint, available to the [Pro Plus tier](https://etherscan.io/apis)</Note>
<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="nametag">
  Set to `nametag` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getaddresstag">
  Set to `getaddresstag` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x0000db5C8B030AE20308AC975898E09741E70000">
  The address to query, like `0x0000db5C8B030AE20308AC975898E09741E70000`.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
     "status":"1",
     "message":"OK",
     "result":[
        {
           "address":"0xa9d1e08c7793af67e9d92fe308d5697fb81d3e43",
           "nametag":"Coinbase 10",
           "internal_nametag":"",
           "url":"https://coinbase.com",
           "shortdescription":"",
           "notes_1":"",
           "notes_2":"",
           "labels":[
              "Coinbase",
              "Exchange"
           ],
           "labels_slug":[
              "coinbase",
              "exchange"
           ],
           "reputation":0,
           "other_attributes":[
              
           ],
           "lastupdatedtimestamp":1721899658
        }
     ]
  }
  ```
</ResponseExample>


================================================================================

# Get Estimated Block Countdown by Block Number

Source: https://docs.etherscan.io/api-reference/endpoint/getblockcountdown.md
Extraction Method: markdown

# Get Estimated Block Countdown by Block Number

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="block">
  Set to `block` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getblockcountdown">
  Set to `getblockcountdown` for this endpoint.
</ParamField>

<ParamField query="blockno" type="integer" default="16701588">
  Block number to estimate time remaining for.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=block&action=getblockcountdown&blockno=16701588&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "0",
    "message": "NOTOK",
    "result": "Error! Block number already pass"
  }
  ```
</ResponseExample>


================================================================================

# Get Block Number by Timestamp

Source: https://docs.etherscan.io/api-reference/endpoint/getblocknobytime.md
Extraction Method: markdown

# Get Block Number by Timestamp

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="block">
  Set to `block` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getblocknobytime">
  Set to `getblocknobytime` for this endpoint.
</ParamField>

<ParamField query="timestamp" type="integer" default="1578638524">
  Unix timestamp in seconds.
</ParamField>

<ParamField query="closest" type="string" default="before">
  Closest available block to the provided timestamp, either `before` or `after`.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=block&action=getblocknobytime&timestamp=1578638524&closest=before&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "9251482"
  }
  ```
</ResponseExample>


================================================================================

# Get Block and Uncle Rewards by Block Number

Source: https://docs.etherscan.io/api-reference/endpoint/getblockreward.md
Extraction Method: markdown

# Get Block and Uncle Rewards by Block Number

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID you query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="block">
  Set to `block` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getblockreward">
  Set to `getblockreward` for this endpoint.
</ParamField>

<ParamField query="blockno" type="integer" default="2165403">
  Block number to check rewards for.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=block&action=getblockreward&blockno=2165403&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "blockNumber": "2165403",
      "timeStamp": "1472533979",
      "blockMiner": "0x13a06d3dfe21e0db5c016c03ea7d2509f7f8d1e3",
      "blockReward": "5314181600000000000",
      "uncles": [
        {
          "miner": "0xbcdfc35b86bedf72f0cda046a3c16829a2ef41d1",
          "unclePosition": "0",
          "blockreward": "3750000000000000000"
        },
        {
          "miner": "0x0d0c9855c722ff0c78f21e43aa275a5b8ea60dce",
          "unclePosition": "1",
          "blockreward": "3750000000000000000"
        }
      ],
      "uncleInclusionReward": "312500000000000000"
    }
  }
  ```
</ResponseExample>


================================================================================

# Get Contract Creator and Creation Tx Hash

Source: https://docs.etherscan.io/api-reference/endpoint/getcontractcreation.md
Extraction Method: markdown

# Get Contract Creator and Creation Tx Hash

> Retrieve a contract's deployer address and creation transaction.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getcontractcreation">
  Set to `getcontractcreation` for this endpoint.
</ParamField>

<ParamField query="contractaddresses" type="string" default="0xB83c27805aAcA5C7082eB45C868d955Cf04C337F,0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45">
  Up to 5 contract addresses, separated by commas.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "contractAddress": "0xcbdcd3815b5f975e1a2c944a9b2cd1c985a1cb7f",
        "contractCreator": "0x3d080421c9dd5fb387d6e3124f7e1c241ade9568",
        "txHash": "0xdce495a9261c4a2a5d4e879cfb55c060b4616a846d3425c441a9e31aa34c956f",
        "blockNumber": "10720863",
        "timestamp": "1598242563",
        "contractFactory": "",
        "creationBytecode": "0x602d3d8160093d39f3363d3d373d3d3d363d73c6cf0f044ba8ea402bfedf9e87b88bf1c008d1625af43d82803e903d91602b57fd5bf3"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Deposit Transactions by Address

Source: https://docs.etherscan.io/api-reference/endpoint/getdeposittxs.md
Extraction Method: markdown

# Get Deposit Transactions by Address

export const chain = '1';

<Callout icon="globe" iconType="regular">This endpoint is only available for the Arbitrum and Optimism stack chains.</Callout>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="10">
  Chain ID to query, eg `10` for Optimism or `42161` for Arbitrum from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getdeposittxs">
  Set to `getdeposittxs` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x80f3950a4d371c43360f292a4170624abd9eed03">
  Address to check for cross-chain deposits from Ethereum to L2.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="10">
  Number of records per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=10&module=account&action=getdeposittxs&address=0x80f3950a4d371c43360f292a4170624abd9eed03&page=1&offset=10&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "132992375",
        "timeStamp": "1741583527",
        "blockHash": "0xef2ff158c8b12be842429f4a8cde58bfa6a389c5274b46f8a1dd2ee7f958ca4d",
        "hash": "0x64ccd0cfa9f333578b36227492f3bc7f5f3ec4bfa82cdc46f82884db680d8e5b",
        "nonce": "520502",
        "from": "0x36bde71c97b33cc4729cf772ae268934f7ab70b2",
        "to": "0x4200000000000000000000000000000000000007",
        "value": "598200000000000",
        "gas": "490798",
        "gasPrice": "0",
        "input": "0xd764ad0b000100000000000000000000000000000000000000000000000000000002802a00000000000000000000000099c9fc46f92e8a1c0dec1b1747d010903e884be10000000000000000000000004200000000000000000000000000000000000001000000000000000000000000000000000000000000000000000002200f4a81300000000000000000000000000000000000000000000000000000000000000030d4000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000a41635f5fd0000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000080f3950a4d371c43360f292a4170624abd9eed03000000000000000000000000000000000000000000000000000002200f4a813000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "cumulativeGasUsed": "169497",
        "gasUsed": "117234",
        "isError": "0",
        "errDescription": "",
        "txreceipt_status": "1",
        "queueIndex": "999999",
        "L1transactionhash": "0x303bd05c47e62e1243a33210e535ebc70a7567e53a9972fbdef52ee5bcda5acb",
        "L1TxOrigin": "0x36bde71c97b33cc4729cf772ae268934f7ab70b2",
        "tokenAddress": "ETH",
        "tokenSentFrom": "",
        "tokenSentTo": "0x80f3950a4d371c43360f292a4170624abd9eed03",
        "tokenValue": "598200000000000"
      },
      {
        "blockNumber": "134878032",
        "timeStamp": "1745354841",
        "blockHash": "0xd1a47b46e3aaed25c594507cf9df59c9ba7a25542fabed7e2b646efe8b6944f9",
        "hash": "0xb7cbf6eb529f60b28c6707a52e17c84e75bbe0a968e668a29e5a7550bfb00e92",
        "nonce": "527247",
        "from": "0x36bde71c97b33cc4729cf772ae268934f7ab70b2",
        "to": "0x4200000000000000000000000000000000000007",
        "value": "1195403000000000",
        "gas": "490798",
        "gasPrice": "0",
        "input": "0xd764ad0b0001000000000000000000000000000000000000000000000000000000029a8300000000000000000000000099c9fc46f92e8a1c0dec1b1747d010903e884be100000000000000000000000042000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000043f36732dae00000000000000000000000000000000000000000000000000000000000000030d4000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000a41635f5fd0000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000080f3950a4d371c43360f292a4170624abd9eed030000000000000000000000000000000000000000000000000000043f36732dae000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "cumulativeGasUsed": "147297",
        "gasUsed": "92234",
        "isError": "0",
        "errDescription": "",
        "txreceipt_status": "1",
        "queueIndex": "999999",
        "L1transactionhash": "0xdca5992b97fcb3d2aa4d06f8c47c0786c0007009d15445712931ee0998f94caa",
        "L1TxOrigin": "0x36bde71c97b33cc4729cf772ae268934f7ab70b2",
        "tokenAddress": "ETH",
        "tokenSentFrom": "",
        "tokenSentTo": "0x80f3950a4d371c43360f292a4170624abd9eed03",
        "tokenValue": "1195403000000000"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Label Master List

Source: https://docs.etherscan.io/api-reference/endpoint/getlabelmasterlist.md
Extraction Method: markdown

# Get Label Master List

<Note>This is a PRO endpoint, available to the [Enterprise tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="module" type="string" default="nametag">
  Set to `nametag` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getlabelmasterlist">
  Set to `getlabelmasterlist` for this endpoint.
</ParamField>

<ParamField query="format" type="string" default="zip">
  The format of the response. Can be either `zip` or `csv`. Note that the labels `binance`, `deposit-address`, and `all` must use `zip` format.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
     "status":"1",
     "message":"OK",
     "result":[
        {
           "labelname":"Axelar",
           "labelslug":"axelar",
           "shortdescription":"Axelar delivers secure cross-chain communication for Web3. Its infrastructure enables dApp users to interact with any asset or application, on any chain, with one click. Axelar is an overlay network, delivering Turing-complete message passing via proof-of-stake and permissionless protocols.",
           "notes":"",
           "lastupdatedtimestamp":1712897117
        },
        {
           "labelname":"Binance",
           "labelslug":"binance",
           "shortdescription":"Binance is one of the world’s leading blockchain ecosystems, with a product suite that includes the largest digital asset exchange.",
           "notes":"",
           "lastupdatedtimestamp":1759922816
        }
     ]
  }
  ```
</ResponseExample>


================================================================================

# Get Event Logs by Address

Source: https://docs.etherscan.io/api-reference/endpoint/getlogs.md
Extraction Method: markdown

# Get Event Logs by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="logs">
  Set to `logs` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getLogs">
  Set to `getLogs` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xbd3531da5cf5857e7cfaa92426877b022e612cf8">
  Address to check for logs.
</ParamField>

<ParamField query="fromBlock" type="integer" default="12878196">
  Starting block number to search from.
</ParamField>

<ParamField query="toBlock" type="integer" default="12878196">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1000">
  Number of records per page. Limited to 1000 records per query; use the `page` parameter for subsequent records.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=logs&action=getLogs&address=0xbd3531da5cf5857e7cfaa92426877b022e612cf8&fromBlock=12878196&toBlock=12878196&page=1&offset=1000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "address": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c45a4b3b698f21f88687548e7f5a80df8b99d93d",
          "0x00000000000000000000000000000000000000000000000000000000000000b5"
        ],
        "data": "0x",
        "blockNumber": "0xc48174",
        "blockHash": "0x837e109ab8b1b40ec7d1032bff82397325d85e719b97d900fa0d9aa9745b2c27",
        "timeStamp": "0x60f9ce56",
        "gasPrice": "0x2e90edd000",
        "gasUsed": "0x247205",
        "logIndex": "0x",
        "transactionHash": "0x4ffd22d986913d33927a392fe4319bcd2b62f3afe1c15a2c59f77fc2cc4c20a9",
        "transactionIndex": "0x"
      },
      {
        "address": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
        "topics": [
          "0x645f26e653c951cec836533f8fe0616d301c20a17153debc17d7c3dbe4f32b28",
          "0x00000000000000000000000000000000000000000000000000000000000000b5"
        ],
        "data": "0x",
        "blockNumber": "0xc48174",
        "blockHash": "0x837e109ab8b1b40ec7d1032bff82397325d85e719b97d900fa0d9aa9745b2c27",
        "timeStamp": "0x60f9ce56",
        "gasPrice": "0x2e90edd000",
        "gasUsed": "0x247205",
        "logIndex": "0x1",
        "transactionHash": "0x4ffd22d986913d33927a392fe4319bcd2b62f3afe1c15a2c59f77fc2cc4c20a9",
        "transactionIndex": "0x"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Event Logs by Address and Topics

Source: https://docs.etherscan.io/api-reference/endpoint/getlogs-address-topics.md
Extraction Method: markdown

# Get Event Logs by Address and Topics

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="logs">
  Set to `logs` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getLogs">
  Set to `getLogs` for this endpoint.
</ParamField>

<ParamField query="fromBlock" type="integer" default="15073139">
  Starting block number to search from.
</ParamField>

<ParamField query="toBlock" type="integer" default="15074139">
  Ending block number to search to.
</ParamField>

<ParamField query="address" type="string" default="0x59728544b08ab483533076417fbbb2fd0b17ce3a">
  Address to check for logs.
</ParamField>

<ParamField query="topic0" type="string" default="0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d">
  First topic to filter by, such as an event signature.
</ParamField>

<ParamField query="topic0_1_opr" type="string" default="and">
  Topic operator between `topic0` and `topic1`, either `and` or `or`.
</ParamField>

<ParamField query="topic1" type="string" default="0x00000000000000000000000023581767a106ae21c074b2276d25e5c3e136a68b">
  Second topic to filter by.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1000">
  Number of records per page. Limited to 1000 records per query; use the `page` parameter for subsequent records.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=logs&action=getLogs&fromBlock=15073139&toBlock=15074139&address=0x59728544b08ab483533076417fbbb2fd0b17ce3a&topic0=0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d&topic0_1_opr=and&topic1=0x00000000000000000000000023581767a106ae21c074b2276d25e5c3e136a68b&page=1&offset=1000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "address": "0x59728544b08ab483533076417fbbb2fd0b17ce3a",
        "topics": [
          "0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d",
          "0x00000000000000000000000023581767a106ae21c074b2276d25e5c3e136a68b",
          "0x000000000000000000000000000000000000000000000000000000000000236d",
          "0x000000000000000000000000c8a5592031f93debea5d9e67a396944ee01bb2ca"
        ],
        "data": "0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000f207539952d0000",
        "blockNumber": "0xe60262",
        "blockHash": "0xb40d77b4ffba5ae2a38cbc87a65a6c9b56f9af5d8bf320aa1f1b6af00b850778",
        "timeStamp": "0x62c26caf",
        "gasPrice": "0x5e2d742c9",
        "gasUsed": "0xfb7f8",
        "logIndex": "0x4b",
        "transactionHash": "0x26fe1a0a403fd44ef11ee72f3b4ceff590b6ea533684cb279cb4242be463304c",
        "transactionIndex": "0x39"
      },
      {
        "address": "0x59728544b08ab483533076417fbbb2fd0b17ce3a",
        "topics": [
          "0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d",
          "0x00000000000000000000000023581767a106ae21c074b2276d25e5c3e136a68b",
          "0x0000000000000000000000000000000000000000000000000000000000002261",
          "0x000000000000000000000000c8a5592031f93debea5d9e67a396944ee01bb2ca"
        ],
        "data": "0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000de0b6b3a7640000",
        "blockNumber": "0xe6035b",
        "blockHash": "0x5a46aeca5eaf8af1fbf56439b12dfea8fb27d18ca31020cc723271e119cffc04",
        "timeStamp": "0x62c27ab1",
        "gasPrice": "0x27e523173",
        "gasUsed": "0x3b86e",
        "logIndex": "0x1d7",
        "transactionHash": "0x3a299413cf2c91e376e542efcf3fc308c562da79af6e992401217cc6208c7f74",
        "transactionIndex": "0x92"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Event Logs by Topics

Source: https://docs.etherscan.io/api-reference/endpoint/getlogs-topics.md
Extraction Method: markdown

# Get Event Logs by Topics

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="logs">
  Set to `logs` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getLogs">
  Set to `getLogs` for this endpoint.
</ParamField>

<ParamField query="fromBlock" type="integer" default="12878196">
  Starting block number to search from.
</ParamField>

<ParamField query="toBlock" type="integer" default="12879196">
  Ending block number to search to.
</ParamField>

<ParamField query="topic0" type="string" default="0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef">
  First topic to filter by, such as an event signature.
</ParamField>

<ParamField query="topic0_1_opr" type="string" default="and">
  Topic operator between `topic0` and `topic1`, either `and` or `or`.
</ParamField>

<ParamField query="topic1" type="string" default="0x0000000000000000000000000000000000000000000000000000000000000000">
  Second topic to filter by.
</ParamField>

<ParamField query="topic1_2_opr" type="string" default="and">
  Topic operator between `topic1` and `topic2`, either `and` or `or`.
</ParamField>

<ParamField query="topic2" type="string" default="0x000000000000000000000000c45a4b3b698f21f88687548e7f5a80df8b99d93d">
  Third topic to filter by.
</ParamField>

<ParamField query="topic2_3_opr" type="string" default="and">
  Topic operator between `topic2` and `topic3`, either `and` or `or`.
</ParamField>

<ParamField query="topic3" type="string" default="0x00000000000000000000000000000000000000000000000000000000000000b5">
  Fourth topic to filter by.
</ParamField>

<ParamField query="topic0_2_opr" type="string" default="and">
  Topic operator between `topic0` and `topic2`, either `and` or `or`.
</ParamField>

<ParamField query="topic0_3_opr" type="string" default="and">
  Topic operator between `topic0` and `topic3`, either `and` or `or`.
</ParamField>

<ParamField query="topic1_3_opr" type="string" default="and">
  Topic operator between `topic1` and `topic3`, either `and` or `or`.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1000">
  Number of records per page. Limited to 1000 records per query; use the `page` parameter for subsequent records.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=logs&action=getLogs&fromBlock=12878196&toBlock=12879196&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&topic0_1_opr=and&topic1=0x0000000000000000000000000000000000000000000000000000000000000000&topic1_2_opr=and&topic2=0x000000000000000000000000c45a4b3b698f21f88687548e7f5a80df8b99d93d&topic2_3_opr=and&topic3=0x00000000000000000000000000000000000000000000000000000000000000b5&topic0_2_opr=and&topic0_3_opr=and&topic1_3_opr=and&page=1&offset=1000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "address": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c45a4b3b698f21f88687548e7f5a80df8b99d93d",
          "0x00000000000000000000000000000000000000000000000000000000000000b5"
        ],
        "data": "0x",
        "blockNumber": "0xc48174",
        "blockHash": "0x837e109ab8b1b40ec7d1032bff82397325d85e719b97d900fa0d9aa9745b2c27",
        "timeStamp": "0x60f9ce56",
        "gasPrice": "0x2e90edd000",
        "gasUsed": "0x247205",
        "logIndex": "0x",
        "transactionHash": "0x4ffd22d986913d33927a392fe4319bcd2b62f3afe1c15a2c59f77fc2cc4c20a9",
        "transactionIndex": "0x"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Blocks Validated by Address

Source: https://docs.etherscan.io/api-reference/endpoint/getminedblocks.md
Extraction Method: markdown

# Get Blocks Validated by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getminedblocks">
  Set to `getminedblocks` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x9dd134d14d1e65f84b706d6f205cd5b1cd03a46b">
  Validator The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`.
</ParamField>

<ParamField query="blocktype" type="string" default="blocks">
  Use `blocks` for full blocks, optionally `uncles` for [pre-Merge](https://ethereum.org/en/roadmap/merge/) blocks.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of records per page.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "20226140",
        "timeStamp": "1720011623",
        "blockReward": "33424103001400554"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Contract Source Code

Source: https://docs.etherscan.io/api-reference/endpoint/getsourcecode.md
Extraction Method: markdown

# Get Contract Source Code

> Retrieve the source code for a verified smart contract.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getsourcecode">
  Set to `getsourcecode` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413">
  The contract address to query.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "SourceCode": "pragma solidity 0.4.26;\r\n\r\ncontract Test12345 {\r\n    string public test;\r\n    \r\n    function enterValue(string _c) {\r\n        test = _c;\r\n    }\r\n}",
        "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_c\",\"type\":\"string\"}],\"name\":\"enterValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]",
        "ContractName": "Test12345",
        "CompilerVersion": "v0.4.26+commit.4563c3fc",
        "CompilerType": "solc",
        "OptimizationUsed": "1",
        "Runs": "200",
        "ConstructorArguments": "",
        "EVMVersion": "Default",
        "Library": "",
        "ContractFileName": "",
        "LicenseType": "None",
        "Proxy": "0",
        "Implementation": "",
        "SwarmSource": "bzzr://f6b932198e10e83a6c872406a4252cf5eea48f37bac9a33085eba887820370cf",
        "SimilarMatch": "0x60810f4d8a618edb533a168e790ab6c09b0e7707"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Check Contract Execution Status

Source: https://docs.etherscan.io/api-reference/endpoint/getstatus.md
Extraction Method: markdown

# Check Contract Execution Status

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="transaction">
  Set to `transaction` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getstatus">
  Set to `getstatus` for this endpoint.
</ParamField>

<ParamField query="txhash" type="string" default="0x15f8e5ea1079d9a0bb04a4c58ae5fe7654b5b2b4463375ff7ffb490aa0032f3a">
  Transaction hash to check the execution status.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=transaction&action=getstatus&txhash=0x15f8e5ea1079d9a0bb04a4c58ae5fe7654b5b2b4463375ff7ffb490aa0032f3a&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "isError": "1",
      "errDescription": "Bad jump destination"
    }
  }
  ```
</ResponseExample>


================================================================================

# Check Transaction Receipt Status

Source: https://docs.etherscan.io/api-reference/endpoint/gettxreceiptstatus.md
Extraction Method: markdown

# Check Transaction Receipt Status

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="transaction">
  Set to `transaction` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="gettxreceiptstatus">
  Set to `gettxreceiptstatus` for this endpoint.
</ParamField>

<ParamField query="txhash" type="string" default="0x513c1ba0bebf66436b5fed86ab668452b7805593c05073eb2d51d3a52f480a76">
  Transaction hash to check the receipt status.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=transaction&action=gettxreceiptstatus&txhash=0x513c1ba0bebf66436b5fed86ab668452b7805593c05073eb2d51d3a52f480a76&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "status": "1"
    }
  }
  ```
</ResponseExample>


================================================================================

# Get Withdrawal Transactions by Address

Source: https://docs.etherscan.io/api-reference/endpoint/getwithdrawaltxs.md
Extraction Method: markdown

# Get Withdrawal Transactions by Address

export const chain = '1';

### Query Parameters

<Callout icon="globe" iconType="regular">This endpoint is only available for the Arbitrum and Optimism stack chains.</Callout>

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="10">
  Chain ID to query, eg `10` for Optimism or `42161` for Arbitrum from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="getwithdrawaltxs">
  Set to `getwithdrawaltxs` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x80f3950a4d371c43360f292a4170624abd9eed03">
  Address to check for cross-chain withdrawals from L2 to Ethereum.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="10">
  Number of records per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=10&module=account&action=getwithdrawaltxs&address=0x80f3950a4d371c43360f292a4170624abd9eed03&page=1&offset=10&sort=desc&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "0",
    "message": "No transactions found",
    "result": []
  }
  ```
</ResponseExample>


================================================================================

# Get Total Nodes Count

Source: https://docs.etherscan.io/api-reference/endpoint/nodecount.md
Extraction Method: markdown

# Get Total Nodes Count

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="nodecount">
  Set to `nodecount` for this endpoint.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=nodecount&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": {
      "UTCDate": "2025-09-25",
      "TotalNodeCount": "11786"
    }
  }
  ```
</ResponseExample>


================================================================================

# Get ERC1155 Token Transfers by Address

Source: https://docs.etherscan.io/api-reference/endpoint/token1155tx.md
Extraction Method: markdown

# Get ERC1155 Token Transfers by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="token1155tx">
  Set to `token1155tx` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x76be3b62873462d2142405439777e971754e8e77">
  The ERC1155 token contract address to filter transfers by, eg `0x495f947276749ce646f68ac8c248420045cb7b5e` for [Opensea Shared Storefront](https://etherscan.io/token/0x495f947276749ce646f68ac8c248420045cb7b5e).
</ParamField>

<ParamField query="address" type="string" default="0x83f564d180b58ad9a02a449105568189ee7de8cb">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "13472395",
        "timeStamp": "1634973285",
        "hash": "0x643b15f3ffaad5d38e33e5872b4ebaa7a643eda8b50ffd5331f682934ee65d4d",
        "nonce": "41",
        "blockHash": "0xa5da536dfbe8125eb146114e2ee0d0bdef2b20483aacbf30fed6b60f092059e6",
        "transactionIndex": "100",
        "gas": "140000",
        "gasPrice": "52898577246",
        "gasUsed": "105030",
        "cumulativeGasUsed": "11739203",
        "input": "deprecated",
        "methodId": "0x3e6b214b",
        "functionName": "",
        "contractAddress": "0x76be3b62873462d2142405439777e971754e8e77",
        "from": "0x1e63326a84d2fa207bdfa856da9278a93deba418",
        "to": "0x83f564d180b58ad9a02a449105568189ee7de8cb",
        "tokenID": "10371",
        "tokenValue": "1",
        "tokenName": "parallel",
        "tokenSymbol": "LL",
        "confirmations": "9995266"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get ERC20-Token Account Balance for TokenContractAddress

Source: https://docs.etherscan.io/api-reference/endpoint/tokenbalance.md
Extraction Method: markdown

# Get ERC20-Token Account Balance for TokenContractAddress

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokenbalance">
  Set to `tokenbalance` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x57d90b64a1a57749b0f932f1a3395792e12e7055">
  Contract address of the ERC-20 token.
</ParamField>

<ParamField query="address" type="string" default="0xe04f27eb70e025b78871a2ad7eabe85e61212761">
  Address to check for token balance.
</ParamField>

<ParamField query="tag" type="string" default="latest">
  Use `latest` for the last block number of the chain.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=account&action=tokenbalance&contractaddress=0x57d90b64a1a57749b0f932f1a3395792e12e7055&address=0xe04f27eb70e025b78871a2ad7eabe85e61212761&tag=latest&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "135499"
  }
  ```
</ResponseExample>


================================================================================

# Get Historical ERC20-Token Account Balance by BlockNo

Source: https://docs.etherscan.io/api-reference/endpoint/tokenbalancehistory.md
Extraction Method: markdown

# Get Historical ERC20-Token Account Balance by BlockNo

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokenbalancehistory">
  Set to `tokenbalancehistory` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x57d90b64a1a57749b0f932f1a3395792e12e7055">
  Contract address of the ERC-20 token.
</ParamField>

<ParamField query="address" type="string" default="0xe04f27eb70e025b78871a2ad7eabe85e61212761">
  Address to check for balance.
</ParamField>

<ParamField query="blockno" type="integer" default="8000000">
  Block number to check balance for.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=account&action=tokenbalancehistory&contractaddress=0x57d90b64a1a57749b0f932f1a3395792e12e7055&address=0xe04f27eb70e025b78871a2ad7eabe85e61212761&blockno=8000000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "135499"
  }
  ```
</ResponseExample>


================================================================================

# Get Token Holder Count by Contract Address

Source: https://docs.etherscan.io/api-reference/endpoint/tokenholdercount.md
Extraction Method: markdown

# Get Token Holder Count by Contract Address

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="token">
  Set to `token` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokenholdercount">
  Set to `tokenholdercount` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d">
  Contract address of the ERC-20 token.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=token&action=tokenholdercount&contractaddress=0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "30506"
  }
  ```
</ResponseExample>


================================================================================

# Get Token Holder List by Contract Address

Source: https://docs.etherscan.io/api-reference/endpoint/tokenholderlist.md
Extraction Method: markdown

# Get Token Holder List by Contract Address

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="token">
  Set to `token` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokenholderlist">
  Set to `tokenholderlist` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d">
  Contract address of the ERC-20 token.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="10">
  Number of records per page.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=token&action=tokenholderlist&contractaddress=0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d&page=1&offset=10&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "TokenHolderAddress": "0xa5b7d615c99f011a22f16f5809890ca6900200a3",
        "TokenHolderQuantity": "2"
      },
      {
        "TokenHolderAddress": "0x0412a1d25fbdcabc536603198330021ccb13240b",
        "TokenHolderQuantity": "3385700"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Token Info by ContractAddress

Source: https://docs.etherscan.io/api-reference/endpoint/tokeninfo.md
Extraction Method: markdown

# Get Token Info by ContractAddress

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="token">
  Set to `token` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokeninfo">
  Set to `tokeninfo` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x0e3a2a1f2146d86a604adc220b4967a898d7fe07">
  Contract address of the token to retrieve info for.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=token&action=tokeninfo&contractaddress=0x0e3a2a1f2146d86a604adc220b4967a898d7fe07&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "contractAddress": "0x0e3a2a1f2146d86a604adc220b4967a898d7fe07",
        "tokenName": "Gods Unchained Cards",
        "symbol": "CARD",
        "divisor": "0",
        "tokenType": "ERC721",
        "totalSupply": "6972003",
        "blueCheckmark": "true",
        "description": "A TCG on the Ethereum blockchain that uses NFT's to bring real ownership to in-game assets.",
        "website": "https://godsunchained.com/",
        "email": "",
        "blog": "https://medium.com/@fuelgames",
        "reddit": "https://www.reddit.com/r/GodsUnchained/",
        "slack": "",
        "facebook": "https://www.facebook.com/godsunchained/",
        "twitter": "https://twitter.com/godsunchained",
        "bitcointalk": "",
        "github": "",
        "telegram": "",
        "wechat": "",
        "linkedin": "",
        "discord": "https://discordapp.com/invite/DKGr2pW",
        "whitepaper": "",
        "tokenPriceUSD": "0.000000000000000000",
        "image": ""
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get ERC721 Token Transfers by Address

Source: https://docs.etherscan.io/api-reference/endpoint/tokennfttx.md
Extraction Method: markdown

# Get ERC721 Token Transfers by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokennfttx">
  Set to `tokennfttx` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x06012c8cf97bead5deae237070f9587f8e7a266d">
  The ERC721 token contract address to filter transfers by, eg `0xbd3531da5cf5857e7cfaa92426877b022e612cf8` for [Pudgy Penguins](https://etherscan.io/token/0xbd3531da5cf5857e7cfaa92426877b022e612cf8).
</ParamField>

<ParamField query="address" type="string" default="0x6975be450864c02b4613023c2152ee0743572325">
  Address to filter token transfers by.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "4708120",
        "timeStamp": "1512907118",
        "hash": "0x031e6968a8de362e4328d60dcc7f72f0d6fc84284c452f63176632177146de66",
        "nonce": "0",
        "blockHash": "0x4be19c278bfaead5cb0bc9476fa632e2447f6e6259e0303af210302d22779a24",
        "from": "0xb1690c08e213a35ed9bab7b318de14420fb57d8c",
        "contractAddress": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "to": "0x6975be450864c02b4613023c2152ee0743572325",
        "tokenID": "202106",
        "tokenName": "CryptoKitties",
        "tokenSymbol": "CK",
        "tokenDecimal": "0",
        "transactionIndex": "81",
        "gas": "158820",
        "gasPrice": "40000000000",
        "gasUsed": "60508",
        "cumulativeGasUsed": "4880352",
        "input": "deprecated",
        "methodId": "0x454a2ab3",
        "functionName": "bid(uint256 _tokenId)",
        "confirmations": "18759540"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get ERC20-Token TotalSupply by ContractAddress

Source: https://docs.etherscan.io/api-reference/endpoint/tokensupply.md
Extraction Method: markdown

# Get ERC20-Token TotalSupply by ContractAddress

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokensupply">
  Set to `tokensupply` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x57d90b64a1a57749b0f932f1a3395792e12e7055">
  Contract address of the ERC-20 token.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=tokensupply&contractaddress=0x57d90b64a1a57749b0f932f1a3395792e12e7055&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "21265524714464"
  }
  ```
</ResponseExample>


================================================================================

# Get Historical ERC20-Token TotalSupply by ContractAddress & BlockNo

Source: https://docs.etherscan.io/api-reference/endpoint/tokensupplyhistory.md
Extraction Method: markdown

# Get Historical ERC20-Token TotalSupply by ContractAddress & BlockNo

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>

<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="stats">
  Set to `stats` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="tokensupplyhistory">
  Set to `tokensupplyhistory` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x57d90b64a1a57749b0f932f1a3395792e12e7055">
  Contract address of the ERC-20 token.
</ParamField>

<ParamField query="blockno" type="integer" default="8000000">
  Block number to check total supply for.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=stats&action=tokensupplyhistory&contractaddress=0x57d90b64a1a57749b0f932f1a3395792e12e7055&blockno=8000000&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": "21265524714464"
  }
  ```
</ResponseExample>


================================================================================

# Get ERC20 Token Transfers by Address

Source: https://docs.etherscan.io/api-reference/endpoint/tokentx.md
Extraction Method: markdown

# Get ERC20 Token Transfers by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint
</ParamField>

<ParamField query="action" type="string" default="tokentx">
  Set to `tokentx` for this endpoint
</ParamField>

<ParamField query="contractaddress" type="string" default="0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2">
  The ERC20 token contract address to filter transfers by, eg `0xdac17f958d2ee523a2206206994597c13d831ec7` for USDT.
</ParamField>

<ParamField query="address" type="string" default="0x4e83362442b8d1bec281594cea3050c8eb01311c">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "4730207",
        "timeStamp": "1513240363",
        "hash": "0xe8c208398bd5ae8e4c237658580db56a2a94dfa0ca382c99b776fa6e7d31d5b4",
        "nonce": "406",
        "blockHash": "0x022c5e6a3d2487a8ccf8946a2ffb74938bf8e5c8a3f6d91b41c56378a96b5c37",
        "from": "0x642ae78fafbb8032da552d619ad43f1d81e4dd7c",
        "contractAddress": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
        "to": "0x4e83362442b8d1bec281594cea3050c8eb01311c",
        "value": "5901522149285533025181",
        "tokenName": "Maker",
        "tokenSymbol": "MKR",
        "tokenDecimal": "18",
        "transactionIndex": "81",
        "gas": "940000",
        "gasPrice": "32010000000",
        "gasUsed": "77759",
        "cumulativeGasUsed": "2523379",
        "input": "deprecated",
        "methodId": "0xbe040fb0",
        "functionName": "redeem()",
        "confirmations": "18737452"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Top Token Holders

Source: https://docs.etherscan.io/api-reference/endpoint/toptokenholders.md
Extraction Method: markdown

# Get Top Token Holders

export const chain = '1';

<Note>This is a PRO endpoint, available to any [paid tier](https://etherscan.io/apis)</Note>
<Warning>This [historical endpoint](/resources/rate-limits) is throttled to 2 calls/s</Warning>
<Callout icon="globe" iconType="regular">HyperEVM (999) is not supported yet</Callout>

<img src="https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=9e6457139c74e1173d79e860ae4c9b08" alt="Token holders" data-og-width="1440" width="1440" data-og-height="550" height="550" data-path="images/features/holders.png" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=280&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=e221b7e761d61c170022a36d3b77a4a0 280w, https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=560&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=a67bf803f38d4344f22a1fd0b35f9d8c 560w, https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=840&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=657668003e5b1d9befe7dd6c732f5b87 840w, https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=1100&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=95cb3838dda9a7de24b736ebb31b584b 1100w, https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=1650&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=1ca9bb49cd735e8bbc68a64b2f0203e3 1650w, https://mintcdn.com/etherscan/_gIsWVKPgcVhiZQW/images/features/holders.png?w=2500&fit=max&auto=format&n=_gIsWVKPgcVhiZQW&q=85&s=10569f23cde4d2374743a40c7f6fc00d 2500w" />

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="token">
  Set to `token` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="topholders">
  Set to `topholders` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9">
  Contract address of the ERC-20 token.
</ParamField>

<ParamField query="offset" type="integer" default="100">
  Number of top holders to return, up to 1000.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=1&module=token&action=topholders&contractaddress=0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9&offset=100&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "Ok",
    "result": [
      {
        "TokenHolderAddress": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
        "TokenHolderQuantity": "2696124.3026660371030000",
        "TokenHolderAddressType": "C"
      },
      {
        "TokenHolderAddress": "0xa700b4eb416be35b2911fd5dee80678ff64ff6c9",
        "TokenHolderQuantity": "1650828.8050095955930000",
        "TokenHolderAddressType": "C"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Normal Transactions By Address

Source: https://docs.etherscan.io/api-reference/endpoint/txlist.md
Extraction Method: markdown

# Get Normal Transactions By Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint
</ParamField>

<ParamField query="action" type="string" default="txlist">
  Set to `txlist` for this endpoint
</ParamField>

<ParamField query="address" type="string" default="0xc5102fE9359FD9a28f877a67E36B0F050d81a3CC">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`.
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "23467053",
        "blockHash": "0xf5646226f819fbdd6b2f1cb99de6e5d17da3d876ec166e69f4e9736c8ebf7ab4",
        "timeStamp": "1759129619",
        "hash": "0xf9db905d77704596d3600816bc70201586cfeec13bcf576320e2f38d6ca851a0",
        "nonce": "8",
        "transactionIndex": "184",
        "from": "0x2449ecef5012f0a0e153b278ef4fcc9625bc4c78",
        "to": "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
        "value": "0",
        "gas": "73271",
        "gasPrice": "238744402",
        "input": "0x5c19a95c0000000000000000000000002449ecef5012f0a0e153b278ef4fcc9625bc4c78",
        "methodId": "0x5c19a95c",
        "functionName": "delegate(address to)",
        "contractAddress": "",
        "cumulativeGasUsed": "22498564",
        "txreceipt_status": "1",
        "gasUsed": "48847",
        "confirmations": "589",
        "isError": "0"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Internal Transactions by Address

Source: https://docs.etherscan.io/api-reference/endpoint/txlistinternal.md
Extraction Method: markdown

# Get Internal Transactions by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint
</ParamField>

<ParamField query="action" type="string" default="txlistinternal">
  Set to `txlistinternal` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x2c1ba59d6f58433fb1eaee7d20b26ed83bda51a3">
  The address to query, like `0xfefefefefefefefefefefefefefefefefefefefe`.
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "2535368",
        "timeStamp": "1477837690",
        "hash": "0x8a1a9989bda84f80143181a68bc137ecefa64d0d4ebde45dd94fc0cf49e70cb6",
        "from": "0x20d42f2e99a421147acf198d775395cac2e8b03d",
        "to": "",
        "value": "0",
        "contractAddress": "0x2c1ba59d6f58433fb1eaee7d20b26ed83bda51a3",
        "input": "",
        "type": "create",
        "gas": "254791",
        "gasUsed": "46750",
        "traceId": "0",
        "isError": "0",
        "errCode": ""
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Internal Transactions by Block Range

Source: https://docs.etherscan.io/api-reference/endpoint/txlistinternal-blockrange.md
Extraction Method: markdown

# Get Internal Transactions by Block Range

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="txlistinternal">
  Set to `txlistinternal` for this endpoint.
</ParamField>

<ParamField query="startblock" type="integer" default="13481773">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of transactions per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "13481773",
        "timeStamp": "1635100060",
        "hash": "0x8b440f5ec0e986589517b131c5b75e921f2768b9912f028d2cdb009d759036ab",
        "from": "0x3909336de913344701c6f096502d26208210b39f",
        "to": "0xff62dfadca3b5643d0b283571fe154d886580c0c",
        "value": "1159078546481168231",
        "contractAddress": "",
        "input": "",
        "type": "call",
        "gas": "101300",
        "gasUsed": "13898",
        "traceId": "3",
        "isError": "0",
        "errCode": ""
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Internal Transactions by Transaction Hash

Source: https://docs.etherscan.io/api-reference/endpoint/txlistinternal-txhash.md
Extraction Method: markdown

# Get Internal Transactions by Transaction Hash

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint
</ParamField>

<ParamField query="action" type="string" default="txlistinternal">
  Set to `txlistinternal` for this endpoint.
</ParamField>

<ParamField query="txhash" type="string" default="0x40eb908387324f2b575b4879cd9d7188f69c8fc9d87c901b9e2daaea4b442170">
  Transaction hash to check for internal transactions, like `0x36dc7f05085d0e4f9c3e4116345a2a487ac8f23f7e71bcc0ae20e27abbfa931d`. Only non-zero value internal transactions are returned.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "blockNumber": "1743059",
        "timeStamp": "1466489498",
        "from": "0x2cac6e4b11d6b58f6d3c1c9d5fe8faa89f60e5a2",
        "to": "0x66a1c3eaf0f1ffc28d209c0763ed0ca614f3b002",
        "value": "7106740000000000",
        "contractAddress": "",
        "input": "",
        "type": "call",
        "gas": "2300",
        "gasUsed": "0",
        "isError": "0",
        "errCode": ""
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Plasma Deposits by Address

Source: https://docs.etherscan.io/api-reference/endpoint/txnbridge.md
Extraction Method: markdown

# Get Plasma Deposits by Address

export const chain = '1';

<Callout icon="globe" iconType="regular">This endpoint is only available for Polygon (137), Xdai (100) and BTTC(199)</Callout>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="137">
  Chain ID to query, eg `137` for Polygon from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="txnbridge">
  Set to `txnbridge` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0x4880bd4695a8e59dc527d124085749744b6c988e">
  Address to check for Plasma deposits.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="10">
  Number of records per page.
</ParamField>

<RequestExample>
  ```bash  theme={null}
  curl "https://api.etherscan.io/v2/api?chainid=137&module=account&action=txnbridge&address=0x4880bd4695a8e59dc527d124085749744b6c988e&page=1&offset=10&apikey=YourApiKeyToken"
  ```
</RequestExample>

<ResponseExample>
  ```json  theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "hash": "0xf645deb2b6fbb8b76ccbcf4bde782e28d3520e8a30e9a568b9b8c526e2fd8434",
        "blockNumber": "51844560",
        "timeStamp": "1704181285",
        "from": "0x0000000000000000000000000000000000000000",
        "address": "0x4880bd4695a8e59dc527d124085749744b6c988e",
        "amount": "2341706540000000000",
        "tokenName": "Polygon Token",
        "symbol": "POL",
        "contractAddress": "0x0000000000000000000000000000000000001010",
        "divisor": "18"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Get Beacon Chain Withdrawals by Address

Source: https://docs.etherscan.io/api-reference/endpoint/txsbeaconwithdrawal.md
Extraction Method: markdown

# Get Beacon Chain Withdrawals by Address

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="account">
  Set to `account` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="txsBeaconWithdrawal">
  Set to `txsBeaconWithdrawal` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f">
  Address to check for beacon withdrawals.
</ParamField>

<ParamField query="startblock" type="integer" default="0">
  Starting block number to search from.
</ParamField>

<ParamField query="endblock" type="integer" default="9999999999">
  Ending block number to search to.
</ParamField>

<ParamField query="page" type="integer" default="1">
  Page number for pagination.
</ParamField>

<ParamField query="offset" type="integer" default="1">
  Number of records per page.
</ParamField>

<ParamField query="sort" type="string" default="desc">
  Sort order either `desc` for the latest transactions first or `asc` for the oldest transactions first.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
    "status": "1",
    "message": "OK",
    "result": [
      {
        "withdrawalIndex": "13",
        "validatorIndex": "117823",
        "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
        "amount": "3402931175",
        "blockNumber": "17034877",
        "timestamp": "1681338599"
      }
    ]
  }
  ```
</ResponseExample>


================================================================================

# Verify Proxy Contract

Source: https://docs.etherscan.io/api-reference/endpoint/verifyproxycontract.md
Extraction Method: markdown

# Verify Proxy Contract

> Submit a proxy contract for verification.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="verifyproxycontract">
  Set to `verifyproxycontract` for this endpoint.
</ParamField>

<ParamField query="address" type="string" default="0xcbdcd3815b5f975e1a2c944a9b2cd1c985a1cb7f">
  The proxy contract address to verify.
</ParamField>

<ParamField query="expectedimplementation" type="string" default="0xB0F24CEB2616F6Bb608B00875Db306167c0f2E8C">
  Optional implementation address to enforce during verification.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
      "status": "1",
      "message": "OK",
      "result": "a7lpxkm9kpcpicx7daftmjifrfhiuhf5vqqnawhkfhzfrcpnxj"
  }
  ```
</ResponseExample>


================================================================================

# Verify Solidity Source Code

Source: https://docs.etherscan.io/api-reference/endpoint/verifysourcecode.md
Extraction Method: markdown

# Verify Solidity Source Code

> Submit Solidity source code for verification.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="verifysourcecode">
  Set to `verifysourcecode` for this endpoint.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413">
  The address where the contract is deployed.
</ParamField>

<ParamField query="sourceCode" type="string">
  The Solidity source code to verify.
</ParamField>

<ParamField query="codeformat" type="string" default="solidity-standard-json-input">
  Use `solidity-single-file` for a single file or `solidity-standard-json-input` for JSON input.
</ParamField>

<ParamField query="contractname" type="string" default="contracts/Verified.sol:Verified">
  The contract name, including path if applicable. If `codeformat=solidity-standard-json-input`, then enter contractname as `erc20.sol:erc20`.
</ParamField>

<ParamField query="compilerversion" type="string" default="v0.8.24+commit.e11b9ed9">
  Compiler version used for compilation.
</ParamField>

<ParamField query="optimizationUsed" type="string" default="0">
  Use `1` if optimization was used or `0` if disabled, specify runs below.
</ParamField>

<ParamField query="runs" type="string" default="200">
  Number of optimization runs.
</ParamField>

<ParamField query="constructorArguments" type="string" default="00000000000000000000000074271f2282ed7ee35c166122a60c9830354be42a">
  Optional constructor arguments used in contract deployment.
</ParamField>

<ParamField query="evmVersion" type="string" default="default">
  Use compiler `default` or specify an EVM version such as `byzantium`, `shanghai`.
</ParamField>

<ParamField query="licenseType" type="string" default="1">
  The [open source license](https://etherscan.io/contract-license-types) to associate with the verified source code, e.g `3` for MIT.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
      "status": "1",
      "message": "OK",
      "result": "a7lpxkm9kpcpicx7daftmjifrfhiuhf5vqqnawhkfhzfrcpnxj"
  }
  ```
</ResponseExample>


================================================================================

# Verify Stylus Source Code

Source: https://docs.etherscan.io/api-reference/endpoint/verifystylus.md
Extraction Method: markdown

# Verify Stylus Source Code

> Submit Stylus source code for verification.

export const chain = '1';

<Callout icon="globe" iconType="regular">This endpoint is only available for the Arbitrum stack chains.</Callout>

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="42161">
  Chain ID to query, eg `42161` for Arbitrum One from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="verifysourcecode">
  Set to `verifysourcecode` for this endpoint.
</ParamField>

<ParamField query="codeformat" type="string" default="stylus">
  Use `stylus` for Stylus projects.
</ParamField>

<ParamField query="sourceCode" type="string" default="https://github.com/OffchainLabs/stylus-hello-world">
  Public Git repository that hosts the Stylus source code.
</ParamField>

<ParamField query="contractaddress" type="string" default="0x915f0B2f34F5B5b84D1F066b398D7F0E3C2F8f83">
  The address where the contract is deployed.
</ParamField>

<ParamField query="contractname" type="string" default="stylus_hello_world">
  The contract name that matches your Stylus deployment.
</ParamField>

<ParamField query="compilerversion" type="string" default="stylus:0.5.3">
  Stylus compiler version used for compilation.
</ParamField>

<ParamField query="licenseType" type="integer" default="3">
  License identifier from the [open source license options](https://arbiscan.io/contract-license-types).
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
      "status": "1",
      "message": "OK",
      "result": "a7lpxkm9kpcpicx7daftmjifrfhiuhf5vqqnawhkfhzfrcpnxj"
  }
  ```
</ResponseExample>


================================================================================

# Verify Vyper Source Code

Source: https://docs.etherscan.io/api-reference/endpoint/verifyvyper.md
Extraction Method: markdown

# Verify Vyper Source Code

> Submit a Vyper contract for verification.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="1">
  Chain ID to query, eg `1` for Ethereum, `8453` for Base from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="verifysourcecode">
  Set to `verifysourcecode` for this endpoint.
</ParamField>

<ParamField query="codeformat" type="string" default="vyper-json">
  Use `vyper-json` for Vyper contracts.
</ParamField>

<ParamField query="sourceCode" type="string">
  The Vyper source code in JSON format.
</ParamField>

<ParamField query="constructorArguments" type="string" default="00000000000000000000000074271f2282ed7ee35c166122a60c9830354be42a">
  Optional constructor arguments used in contract deployment.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413">
  The address where the contract is deployed.
</ParamField>

<ParamField query="contractname" type="string" default="contracts/Verified.vy:Verified">
  The contract name, including path if applicable.
</ParamField>

<ParamField query="compilerversion" type="string" default="vyper:0.4.0">
  Compiler version used for compilation.
</ParamField>

<ParamField query="optimizationUsed" type="string" default="0">
  Use `1` if compiler optimizations were enabled, otherwise `0`.
</ParamField>

<ResponseExample>
  ```json Response theme={null}
  {
      "status": "1",
      "message": "OK",
      "result": "a7lpxkm9kpcpicx7daftmjifrfhiuhf5vqqnawhkfhzfrcpnxj"
  }
  ```
</ResponseExample>


================================================================================

# Verify Source Code on zkSync

Source: https://docs.etherscan.io/api-reference/endpoint/verifyzksyncsourcecode.md
Extraction Method: markdown

# Verify Source Code on zkSync

> Submit zkSync source code for verification.

export const chain = '1';

### Query Parameters

<ParamField query="apikey" type="string" default="YourApiKeyToken">
  Your Etherscan API key.
</ParamField>

<ParamField query="chainid" type="string" default="324">
  Chain ID to query, eg `324` for zkSync Era from our [supported chains](/supported-chains).
</ParamField>

<ParamField query="module" type="string" default="contract">
  Set to `contract` for this endpoint.
</ParamField>

<ParamField query="action" type="string" default="verifysourcecode">
  Set to `verifysourcecode` for this endpoint.
</ParamField>

<ParamField query="codeformat" type="string" default="solidity-standard-json-input">
  Use `solidity-single-file` for a single file or `solidity-standard-json-input` for JSON input.
</ParamField>

<ParamField query="sourceCode" type="string">
  The Solidity source code to verify.
</ParamField>

<ParamField query="constructorArguments" type="string" default="00000000000000000000000074271f2282ed7ee35c166122a60c9830354be42a">
  Optional constructor arguments used in contract deployment.
</ParamField>

<ParamField query="contractaddress" type="string" default="0xf66f984e0b73453193b452f84c8fff0ed19f6d81">
  The address where the contract is deployed.
</ParamField>

<ParamField query="contractname" type="string" default="contracts/Verified.sol:Verified">
  The contract name, including path if applicable.
</ParamField>

<ParamField query="compilerversion" type="string" default="v0.8.24+commit.e11b9ed9">
  Compiler version used for compilation.
</ParamField>

<ParamField query="zksolcVersion" type="string" default="1.3.13">
  zkSync compiler version used for compilation.
</ParamField>

<ParamField query="compilermode" type="string" default="zksync">
  zkSync compiler mode to process the build artifacts.
</ParamField>


================================================================================

# Common Verification Errors

Source: https://docs.etherscan.io/contract-verification/common-verification-errors.md
Extraction Method: markdown

# Common Verification Errors

### Contract Doesn't Match

<Warning>
  "Compiled contract deployment bytecode does NOT match the transaction deployment bytecode"
</Warning>

The submitted source code does not match the contract code deployed on chain.

Common causes include using a different compiler version or enabling optimisation runs.

For an exact match to be found, both <strong>source code</strong> and <strong>compiler settings</strong> specified have to exactly match the deployment conditions, for the same bytecode to be reproduced.

### Solidity Compilation Error

<Warning>
  "Solidity Compilation Error: Identifier not found or not unique"
</Warning>

A compilation issue occured due to syntax errors in your Solidity source code.

Consider debugging your contract with any compiler such as <a href="https://remix.ethereum.org/"><strong>Remix</strong></a> or <a href="https://hardhat.org/"><strong>Hardhat</strong></a> and reference the error from Solidity's <a href="https://docs.soliditylang.org"><strong>official documentation</strong></a>.

### Contract Not Deployed

<Warning>
  "Unable to locate ContractCode at 0x539a277b12a3f6723f4c1769edb11b0be7c214da"
</Warning>

The contract has not been deployed at the specific address at the specific chain.

Check the contract address you've deployed, if your contract deployment transaction has succeeded or if the [**chainId**](/supported-chains) specified is correct.

### Missing or Invalid Library Names

<Warning>
  "Library was required but suitable match not found"
</Warning>

A <a href="https://solidity-by-example.org/library/"><strong>library</strong></a> was used in your contract deployment, but was not specified, misspelt or using the wrong library address.

Double check on your library names ( <strong>case sensitive</strong> such as "PRBMath" ) or ensure that a matching library name and library address is provided.

### Missing Contract Name

<Warning>
  "Unable to locate ContractName , did you specify the correct Contract Name ?"
</Warning>

A match was not found with the name of the contract specified when multiple files are provided.

Ensure that you have provided the correct contract name to be matched against, and making sure you submit the <strong>main contract</strong> name not its dependencies.

### No Deployment Bytecode Match Found

<Warning>
  "Compiled contract deployment bytecode does NOT match the transaction deployment bytecode"
</Warning>

The compilation of your submitted source code does not match the deployment bytecode, ie the constructor arguments plus general initialisation code and runtime bytecode.

Similar solution as above, do take into account constructor arguments as well below.

### Missing/Invalid Constructor Arguments

<Warning>
  "Please check if the correct constructor argument was entered"
</Warning>

if your contract utilized the `constructor` keyword, you should provide it in hex format. Otherwise, leave this field empty as it is.

You may reference your original deployment's constructor arguments or determine it from the <a href="https://info.etherscan.com/contract-verification-constructor-arguments/"><strong>end of your compiled bytecode</strong></a>.

### Mismatched bytecode metadata hash

<Warning>
  "Please check if the correct bytecodehash was specified via standard-json verification."
</Warning>

The <a href="https://docs.soliditylang.org/en/v0.8.17/metadata.html#encoding-of-the-metadata-hash-in-the-bytecode"><strong>metadata hash</strong></a> settings of your submitted source code differs from the settings of your original contract deployment, such as being set to `ipfs` or `none`.

Submit your contract verification using the solc json input format, and <a href="https://github.com/PaulRBerg/hardhat-template/blob/f6406c4e7c9e23d5169b39fb11d528a975b678e6/hardhat.config.ts#L104"><strong>specify the settings</strong></a> accordingly there.

Other submission formats such as single file or multifile <strong>do not support</strong> changing this setting, and will use the compiler defaults.

### Similar Match Found

<Warning>
  "This contract already Similar Matches the deployed ByteCode at 0x4200000000000000000000000000000000000042"
</Warning>

This error indicates that the contract has already been verified via <a href="https://info.etherscan.com/types-of-contract-verification/"><strong>Similar Match</strong></a> to another contract.

Kindly <a href="https://info.etherscan.com/update-on-similar-match-contract-verification/"><strong>reach out</strong></a> to us at this point of time to have this updated to Full Match if required.

### Similar Match API Responses

<Info>
  Both [`getsourcecode`](/api-reference/endpoint/getsourcecode) and [`getabi`](/api-reference/endpoint/getabi) return data for contracts verified via Similar Match.
</Info>

If a verified contract does not return data from these endpoints, report the issue to us.

### Unsupported Solc Version

<Warning>
  "Invalid or not supported solc version, see [https://etherscan.io/solcversions](https://etherscan.io/solcversions) for list"
</Warning>

This error is thrown when you specify to use an invalid or unsupported version of the Solidity Compiler ie. below `v0.4.11-nightly.2017.3.15+`.

Do [**let us know**](/resources/contact-us) if you need to verify a contract below this supported version such as to prove you deployed the first NFT.

### Source Code Already Verified

<Warning>
  "Source code already verified"
</Warning>

An <a href="https://info.etherscan.com/types-of-contract-verification/"><strong>Exact Match</strong></a> has been obtained, get back to having your <a href="https://media.giphy.com/media/11ISwbgCxEzMyY/giphy.gif"><strong>coffee</strong></a>.

If you think this might be a mistake, do check if you've submitted verification to the right <strong>explorer/chain</strong>, a contract that is verified on Etherscan is <strong>not automatically verified</strong> on other explorers.

### Unsupported File Import Callback

<Warning>
  "Source "@openzeppelin/contracts/ERC20.sol" not found: File import callback not supported"
</Warning>

This error is thrown when contracts reference imports from external sources, such as <a href="https://docs.openzeppelin.com/"><strong>OpenZeppelin</strong></a> libraries or Github links.

Consider <a href="https://hardhat.org/hardhat-runner/docs/advanced/flattening#flattening-your-contracts"><strong>flattening</strong></a> your source code into a single file, or use the Solidity Standard Json Input format that comes with tools such as <a href="https://hardhat.org/hardhat-runner/docs/guides/verifying#verifying-your-contracts"><strong>Hardhat</strong></a> to resolve these external imports.

### Invalid chainId

The chain you've specified does not have an Etherscan-like explorer.

Check the chainId used against our [**supported list**](/supported-chains).

### Temporary Error

<Warning>
  "This could be a temporary error, please retry or contact us (Error Code 10001/10002/10003)"
</Warning>

Something went wrong on our end, which could include downtime or <a href="https://etherscan.freshstatus.io/"><strong>maintenance</strong></a> windows.

Please retry this in a while or [**ping us**](/resources/contact-us) if this continues to persist.


================================================================================

# Verify with Foundry

Source: https://docs.etherscan.io/contract-verification/verify-with-foundry.md
Extraction Method: markdown
Components: code_block(2)

# Verify with Foundry

<Info>
  You must update to  the nightly build of Foundry to use this at the moment, via `foundryup --install nightly`
</Info>

[**Foundry**](https://book.getfoundry.sh/) is a tool that helps take the heat off smart contract development steps, including compiling, deploying and finally submitting your contract for verification.

## Deploy and Verify

```bash  theme={null}
forge create --broadcast --rpc-url https://rpc.sepolia.ethpandaops.io --private-key YourPrivateKey src/ContractFile.sol:ContractName --verify --verifier etherscan --etherscan-api-key YourApiKeyToken
```

## Verify an Existing Contract

```bash  theme={null}
forge verify-contract --watch --chain sepolia 0x324eca20b358b18e48f2611f7452560ce3b3c1bb src/ContractFile.sol:ContractName --verifier etherscan --etherscan-api-key YourApiKeyToken
```

## Migrating from V1

<Warning>
  API keys from any other explorer (such as BscScan/Basescan/Arbiscan) have been deprecated
</Warning>

The easiest way to migrate is to simply pass in your [**Etherscan API key**](https://etherscan.io/apidashboard) via `--etherscan-api-key`&#x20;

For deployment scripts, in `foundry.toml` you can shorten your settings to this, without needing a different key for each chain.

```toml  theme={null}
etherscan_api_key = "VZFDUWB3YGQ1YCDKTCU1D6DDSS6EWI62KV"

[etherscan]
mainnet   = { key = "${ETHERSCAN_API_KEY}" } 
```

> *This open source integration was shipped by* [*@iainnash*](https://github.com/iainnash) *and the Foundry team*


================================================================================

# Verify with Hardhat

Source: https://docs.etherscan.io/contract-verification/verify-with-hardhat.md
Extraction Method: markdown
Components: code_block(5)

# Verify with Hardhat

<Info>
  Make sure you've updated to <a href="https://www.npmjs.com/package/@nomicfoundation/hardhat-verify"><strong>@nomicfoundation/hardhat-verify@^2.0.14</strong></a>, see migrating notes if you have an existing project.
</Info>

[**Hardhat**](https://hardhat.org/) is a smart contracts development tool, perfect if you're familiar with Javascript/Typescript.

If you've yet to setup Hardhat, here's the [**official guide**](https://hardhat.org/tutorial/creating-a-new-hardhat-project)**,** the following steps are to setup the verification plugin.

## Install

Via npm.

```bash  theme={null}
npm i @nomicfoundation/hardhat-verify
```

## Config

In `hardhat.config.ts`, import the plugin.

```ts  theme={null}
import "@nomicfoundation/hardhat-verify";
```

Add your Etherscan key.

```javascript  theme={null}
config: HardhatUserConfig = {
  solidity: "0.8.28",
  networks: {
    sepolia: {
      url: `https://1rpc.io/sepolia`,
      accounts: [SEPOLIA_PRIVATE_KEY],
    },
  },
   etherscan: {
    apiKey: "YourEtherscanApiKey"
  }
};
```

## Deploy and Verify

```bash  theme={null}
npx hardhat ignition deploy ./ignition/modules/Lock.ts --network sepolia --verify
```

## Verify an Existing Contract

```bash  theme={null}
npx hardhat verify --network sepolia 0xdCBdBAA8404554502B433106e62728B659aCfE3b
```

## Custom Chains

For super new Etherscan based explorers that are not supported by Hardhat yet, you can add them as a `customChain` in `hardhat.config.ts`.

```json  theme={null}
etherscan: {
    apiKey: "YourEtherscanApiKey",
    customChains: [
    {
      network: "sonic",
      chainId: 146,
      urls: {
        apiURL: "https://api.etherscan.io/v2/api",
        browserURL: "https://sonicscan.org"
      }
    },
    {
      network: "katana",
      chainId: 146,
      urls: {
        apiURL: "https://api.etherscan.io/v2/api",
        browserURL: "https://sonicscan.org"
      }
    }
  ]
}
```

## Migrating from V1

<Warning>
  API keys from any other explorer (such as BscScan/Basescan/Arbiscan) have been deprecated.
</Warning>

This change largely affects the `hardhat.config.ts` file — good riddance to the long `customChains` entries for each explorer.

Update your config to a single Etherscan `apiKey` entry as per above.

> *This open source integration was shipped by* [***@antico5***](https://github.com/antico5) *and the Hardhat team*.


================================================================================

# Verify with Remix

Source: https://docs.etherscan.io/contract-verification/verify-with-remix.md
Extraction Method: markdown

# Verify with Remix

[**Remix**](https://remix.ethereum.org/) is a no-frills, just works in your browser Solidity development tool.

## Activate

Once you've written and deployed your contract, click on the **Plugin Manager** and select **Contract Verification**.

<img src="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=3bccb8e28bebeb7b7127ac7ba2e72576" alt="Remix homepage" data-og-width="949" width="949" data-og-height="398" height="398" data-path="images/remix.png" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=280&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=5326b9125a4be8e6def1d94322791c54 280w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=560&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=19ddb908f896d2518eb47d197c3abd2e 560w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=840&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=5e5ebb4a11f4a176251fcc951cf3eb05 840w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=1100&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=f1ecfc705d2174e68eb6371946a6b989 1100w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=1650&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=2cc98a6d0bc1d2c1d81d52e2ea7fea93 1650w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix.png?w=2500&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=3fc42f11016731a64178367bf92964ef 2500w" />

## Add an API Key

The Etherscan verification plugin requires an API key because grumpy bots yell at us on a daily basis.

Click the "Enable" link and add your key, leave the rest as default.

<img src="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=f8b7485653e56a47230d3ebab0bf97d1" alt="Remix add key" data-og-width="944" width="944" data-og-height="394" height="394" data-path="images/remix-add-key.png" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=280&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=9835fab800449c2d7c15bc2d90de4258 280w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=560&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=7643fef3ca227dbe54c6e2e7480cf605 560w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=840&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=983114f6de212959c01715b5e4ceced8 840w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=1100&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=beeadc38838d43ad29f0d17dff33522c 1100w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=1650&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=812a0a5a85d2a7b75f1f313cd99765c4 1650w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-add-key.png?w=2500&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=cdae9fb3610e98a915375504f21daf6a 2500w" />

## Verify

Fill in the chain, contract address, and contract name that you deployed.

Now that the Etherscan checkbox is enabled, click Verify. Without this, the contract won't show as verified on Etherscan's explorer.

<img src="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=b4265f5963aa6077cbd203a8bd866cce" alt="Remix verify" data-og-width="1536" width="1536" data-og-height="697" height="697" data-path="images/remix-verify.avif" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=280&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=f1c8b2fb2884ff8bd943076400a28ee9 280w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=560&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=83af30a432c67a72cb0aebeb7bab0b34 560w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=840&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=b843d95412cbea50c46b0ff549797191 840w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=1100&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=8fe90f7e0ebd7d47661041118a8c2e73 1100w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=1650&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=25737cd0e65d98155d0ed09ae9564fc8 1650w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verify.avif?w=2500&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=b644174694c9aeae0bd7d25c87b453d0 2500w" />

Once verified, you will see a happy green ✅.

<img src="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=aaa54005623b0fa77bbdbb589e23ec0c" alt="Remix verified" data-og-width="1200" width="1200" data-og-height="473" height="473" data-path="images/remix-verified.avif" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=280&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=d17eb0b43442e304a52a86d6d6de26d2 280w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=560&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=4020681d261023af2b93d23de7c591be 560w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=840&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=ff758de5758484e06fa4a40db2aedbff 840w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=1100&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=e9172571ecfdd96111f5e307a5c700b4 1100w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=1650&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=c4af0c0ce03cfc774706e0ccfbe16ad6 1650w, https://mintcdn.com/etherscan/T1KjV-_fSmvoQ9iv/images/remix-verified.avif?w=2500&fit=max&auto=format&n=T1KjV-_fSmvoQ9iv&q=85&s=dcfc0914ab9dacc0e07ee2a734e73144 2500w" />

> *This open source integration was shipped by* [**@manuelwedler**](https://github.com/manuelwedler) *and the Remix team*.


================================================================================

# Getting an API Key

Source: https://docs.etherscan.io/getting-an-api-key.md
Extraction Method: markdown

# Getting an API Key

<Steps>
  <Step title="Create an Etherscan Account">
    [Sign up](https://etherscan.io/register) for a Free account.
  </Step>

  <Step title="Navigate to the API Dashboard">
    Under your [API Dashboard](https://etherscan.io/apidashboard), click "Add +" to create a new API key. This key can be used to access all [supported chains](/supported-chains) under API V2.
    <img src="https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=01410348888d5cc09dd512256e830930" alt="Remix verify" data-og-width="1200" width="1200" data-og-height="492" height="492" data-path="images/dashboard-keys.avif" data-optimize="true" data-opv="3" srcset="https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=280&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=7e918d20ae818c74ff101e412566f21f 280w, https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=560&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=0dfcb17fbf6abd09a2f4d8d35e7a2cad 560w, https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=840&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=3f50d5488afd9e51453308249e00aa46 840w, https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=1100&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=f4549afd7e5ea601a0795951317aa06e 1100w, https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=1650&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=3303aafb9b7ba3d0f8045aef5523ff77 1650w, https://mintcdn.com/etherscan/7r1uhEYn3uP2ppZz/images/dashboard-keys.avif?w=2500&fit=max&auto=format&n=7r1uhEYn3uP2ppZz&q=85&s=74c627eca1162db3caa62a7324bf5861 2500w" />
  </Step>

  <Step title="Make your First Request">
    Use your key to start testing requests in the [API Playground](/api-reference/) within this docs 🚀.
  </Step>
</Steps>


================================================================================

# Introduction

Source: https://docs.etherscan.io/introduction.md
Extraction Method: markdown

# Introduction

Etherscan is the leading blockchain explorer, search, API, and analytics platform for Ethereum and other EVM-compatible chains.

With Etherscan API V2, we've unified all 60+ [supported chains](/supported-chains) under a single account and API key system. Your app becomes multichain 🌈 simply by updating the `chainid` parameter to support BNB Smart Chain (BSC), Base, Arbitrum, HyperEVM, and more.

## Start Building

<Columns cols={2}>
  <Card title="Get Stablecoin Transfers to an Address" icon="money-bill-wave" arrow="true" href="/api-reference/endpoint/tokentx" cta="Token Transfers Endpoint">
    Check for USDC/USDT/PYUSD token transfers to an address.
  </Card>

  <Card title="Get Top Token Holders" icon="arrow-up" arrow="true" href="/api-reference/endpoint/toptokenholders" cta="Top Holders Endpoint">
    Analyze the largest holders of YieldBasis(Ethereum), Aster(BNB) and other newly launched tokens.
  </Card>

  <Card title="Get Address Portfolio" icon="briefcase" arrow="true" href="/api-reference/endpoint/addresstokenbalance" cta="Address Portfolio Endpoint">
    List all token balances for an address, across chains.
  </Card>

  <Card title="Get Address Name Tag" icon="mask" arrow="true" href="/api-reference/endpoint/getaddresstag" cta="Name Tag Endpoint">
    Get name tags and labels associated with an address, such as exchange deposits "Coinbase 10".
  </Card>
</Columns>


================================================================================

# Introduction

Source: https://docs.etherscan.io/mcp-docs/introduction.md
Extraction Method: markdown
Components: code_block(1)

# Introduction

Etherscan's MCP [(Model Context Protocol)](https://modelcontextprotocol.io) allows you to connect Etherscan data to your AI models such as ChatGPT, Claude.

On top of providing reliable access, by avoiding hallucination or getting blocked via web search, it opens up the possiblity of building AI agents to do stuff for you.

## Etherscan MCP Server

We host a Streamable HTTP MCP server at

```
https://mcp.etherscan.io/mcp
```

Reach out for [early access](mailto:apisupport@etherscan.io) to a bearer token.


================================================================================

# Introduction

Source: https://docs.etherscan.io/metadata/introduction.md
Extraction Method: markdown

# Introduction

The Metadata CSV export is an Enterprise feature that allows dataset exports of [labels](https://etherscan.io/labelcloud/), name tags, and other metadata related to an address.

This export currently supports Ethereum only, with other chains to follow.

[Contact us](mailto:apisupport@etherscan.io) to for more info and to book a demo.


================================================================================

# Other Attributes Reference

Source: https://docs.etherscan.io/metadata/other-attributes-reference.md
Extraction Method: markdown
Components: table(1)

# Other Attributes Reference

| Header | Description                                                                                     |
| :----: | ----------------------------------------------------------------------------------------------- |
|   TT   | Token Type. Types: `erc-20` and `nft`.                                                          |
|   TR   | Token Reputation. Types: `Ok`, `Poor`, `Unsafe`, `Suspicious`, `Spam`, and `BrandInfringement`. |
|   SC   | Verified Smart Contract.                                                                        |
|   CN   | Contract Name.                                                                                  |
|   ENS  | Ethereum Name Service.                                                                          |


================================================================================

# Reputation Reference

Source: https://docs.etherscan.io/metadata/reputation-reference.md
Extraction Method: markdown
Components: table(1)

# Reputation Reference

| Score | Description                                                                   |
| :---: | ----------------------------------------------------------------------------- |
|   0   | 'UNKNOWN' (default)                                                           |
|   1   | 'OK' An OK reputation is not an endorsement but likely a known/public entity. |
|   2   | 'CAUTION' Moderate Caution Advised when interacting with the address.         |
|   3   | 'UNSAFE' Extreme caution advised when interacting with the address.           |


================================================================================

# Common Error Messages

Source: https://docs.etherscan.io/resources/common-error-messages.md
Extraction Method: markdown

# Common Error Messages

An API call that encounters an error will return 0 as its `status code` and display the cause of the error under the `result` field.

```json  theme={null}
{
  "status": "0",
  "message": "NOTOK",
  "result": "Max rate limit reached, please use API Key for higher rate limit"
}
```

### Missing or Unsupported Chain

<Warning>
  "Missing or unsupported chainid parameter (required for v2 api), please see chainlist for the list of supported chainids"
</Warning>

The chain you've specified is not supported by us yet. It could also be that you've sent multiple chains at the same time like `420,10`, you can only send **one** at a time.

### Invalid API Key

<Warning>
  "Invalid API Key"
</Warning>

This error occurs when you specify an invalid API Key.

Ensure you are using your **Etherscan API Key**, keys from other chains like Polygonscan/Arbiscan are not valid for V2.

Keys do take a few minutes to activate, anything longer than should be alarming.

### Max rate limit

<Warning>
  "Max rate limit reached, please use API Key for higher rate limit"
</Warning>

This error occurs when you **exceed the rate limit** assigned to your specific API key.

To resolve, adhere to the [rate limits](/resources/rate-limits) of your available plan.

If you are using a script or application, **apply throttling** like a token bucket to limit the frequency of calls.

### Missing or invalid action

<Warning>
  "Error! Missing Or invalid Action name"
</Warning>

This error occurs when you **do not specify**, or specify an **invalid** `module` and `action` name.

To resolve, **double check** your API query to use a valid module and action name.

If you require some help getting started, try copying the sample queries provided in the API Playground and pasting them into your browser.

### Endpoint-specific errors

<Warning>
  "Error! Block number already pass"

  "Error! Invalid address format"

  "Contract source code not verified"
</Warning>

These error messages returned are specific to certain endpoints and their **related parameters.**

To resolve, kindly refer to the specific endpoint's documentation, and check for the **correct format** or **values** to be specified as **parameters.**

### Query Timeout

<Warning>
  "Query Timeout occured. Please select a smaller result dataset"

  "Unexpected err, timeout occurred or server too busy. Please try again later"
</Warning>

This error occurs when you have sent a particularly large query that did not manage to be completed in time.

To resolve, consider selecting a smaller date/block range, though you may [**ping us**](/resources/contact-us) if you think the issue may be performance related.

### Migrate from V1

<Warning>
  "Max calls per sec rate limit reached (2/sec). Please switch to API V2"
</Warning>

Please migrate to using Etherscan V2, with your Etherscan API key, here's our [**migration guide**](/v2-migration).

Legacy V1 endpoints from other explorers are accessible by passing in the chain ID, eg 8453 for Base.

### Free Tier Throttled

<Warning>
  "Free API access is temporarily unavailable due to unusually high network activity"
</Warning>

During periods of very high load, Free tier requests may be throttled. For uninterrupted access, using any [**Paid tier**](https://etherscan.io/apis) will have your requests prioritized.


================================================================================

# Contact Us

Source: https://docs.etherscan.io/resources/contact-us.md
Extraction Method: markdown

# Contact Us

<Warning>
  Beware of **phishing attempts** and emails **impersonating the team** at Etherscan, we only communicate from the channels below.
</Warning>

### Support Tickets

Our emails always come from the domain **@etherscan.io**.

Keep in mind that as a block explorer service, we **cannot cancel, refund or reverse transactions** as we do not process them.

If your issues are related to transactions, you may find helpful articles over at the [**Etherscan Information Center.**](https://info.etherscan.com/)

<Info>
  Reach out to us via a [**support ticket.**](https://etherscan.io/contactus)
</Info>

### Twitter

For general updates, new feature releases and community support, keep in touch with us via Twitter.

<Info>
  Follow us on [**Twitter.**](https://twitter.com/etherscan)
</Info>

### Freshstatus

Announcements for ongoing and scheduled maintenance works that may affect certain services used.

<Info>
  Check Etherscan's [**network status.**](https://etherscan.freshstatus.io/)
</Info>


================================================================================

# PRO Endpoints

Source: https://docs.etherscan.io/resources/pro-endpoints.md
Extraction Method: markdown

# PRO Endpoints

A complete list of PRO endpoints available with a [paid subscription.](https://etherscan.io/apis)

## Account

* [Get Historical Native Balance for an Address](/api-reference/endpoint/balancehistory)

## Tokens

* [Get Historical ERC20-Token Account Balance by BlockNo](/api-reference/endpoint/tokenbalancehistory)
* [Get Historical ERC20-Token TotalSupply by ContractAddress & BlockNo](/api-reference/endpoint/tokensupplyhistory)
* [Get Top Token Holders](/api-reference/endpoint/toptokenholders)
* [Get Token Holder List by Contract Address](/api-reference/endpoint/tokenholderlist)
* [Get Token Holder Count by Contract Address](/api-reference/endpoint/tokenholdercount)
* [Get Address ERC20 Token Holding](/api-reference/endpoint/addresstokenbalance)
* [Get Address ERC721 Token Holding](/api-reference/endpoint/addresstokennftbalance)
* [Get Address ERC721 Token Inventory by Contract](/api-reference/endpoint/addresstokennftinventory)

## Blocks

* [Get Daily Average Block Size](/api-reference/endpoint/dailyavgblocksize)
* [Get Daily Block Count and Rewards](/api-reference/endpoint/dailyblkcount)
* [Get Daily Block Rewards](/api-reference/endpoint/dailyblockrewards)
* [Get Daily Average Block Time](/api-reference/endpoint/dailyavgblocktime)
* [Get Daily Uncle Block Count and Rewards](/api-reference/endpoint/dailyuncleblkcount)

## Stats

* [Get Daily Network Transaction Fee](/api-reference/endpoint/dailytxnfee)
* [Get Daily New Address Count](/api-reference/endpoint/dailynewaddress)
* [Get Daily Network Utilization](/api-reference/endpoint/dailynetutilization)
* [Get Daily Average Network Hash Rate](/api-reference/endpoint/dailyavghashrate)
* [Get Daily Transaction Count](/api-reference/endpoint/dailytx)
* [Get Daily Average Network Difficulty](/api-reference/endpoint/dailyavgnetdifficulty)
* [Get Ether Historical Price](/api-reference/endpoint/ethdailyprice)

## Gas Tracker

* [Get Daily Average Gas Limit](/api-reference/endpoint/dailyavggaslimit)
* [Get Ethereum Daily Total Gas Used](/api-reference/endpoint/dailygasused)
* [Get Daily Average Gas Price](/api-reference/endpoint/dailyavggasprice)

## Nametags

* [Get Nametag for an Address](/api-reference/endpoint/getaddresstag) (Pro Plus tier)


================================================================================

# Rate Limits

Source: https://docs.etherscan.io/resources/rate-limits.md
Extraction Method: markdown
Components: table(1)

# Rate Limits

<Warning>
  Historical endpoints have a rate limit of <b>2 calls/s</b> regardless of API PRO tier.
</Warning>

| API Tier         | Rate Limit                                                                                                                                      |
| ---------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |
| Free             | 5 calls/second, up to 100,000 calls/day, may experience [usage caps](/resources/common-error-messages#free-tier-throttled) when network is busy |
| Standard         | 10 calls/second, up to 200,000 calls/day                                                                                                        |
| Advanced         | 20 calls/second, up to 500,000 calls/day                                                                                                        |
| Professional     | 30 calls/second, up to 1,000,000 calls/day                                                                                                      |
| Pro Plus         | 30 calls/second, up to 1,500,000 calls/day                                                                                                      |
| Dedicated/Custom | [**Contact Us**](mailto:apisupport@etherscan.io)                                                                                                |


================================================================================

# Supported Chains

Source: https://docs.etherscan.io/supported-chains.md
Extraction Method: markdown
Components: table(1)

# Supported Chains

For Solana(SOL) data, we're also working on the [**Solscan APIs**](https://solscan.io/apis), available separately.

<Warning>
  Sophon Mainnet (50104) and Sophon Sepolia Testnet (531050104) will be deprecating on November 22nd.
</Warning>

| Chain Name                | Chain ID  |
| ------------------------- | --------- |
| Ethereum Mainnet          | 1         |
| Sepolia Testnet           | 11155111  |
| Holesky Testnet           | 17000     |
| Hoodi Testnet             | 560048    |
| Abstract Mainnet          | 2741      |
| Abstract Sepolia Testnet  | 11124     |
| ApeChain Curtis Testnet   | 33111     |
| ApeChain Mainnet          | 33139     |
| Arbitrum Nova Mainnet     | 42170     |
| Arbitrum One Mainnet      | 42161     |
| Arbitrum Sepolia Testnet  | 421614    |
| Avalanche C-Chain         | 43114     |
| Avalanche Fuji Testnet    | 43113     |
| Base Mainnet              | 8453      |
| Base Sepolia Testnet      | 84532     |
| Berachain Bepolia Testnet | 80069     |
| Berachain Mainnet         | 80094     |
| BitTorrent Chain Mainnet  | 199       |
| BitTorrent Chain Testnet  | 1029      |
| Blast Mainnet             | 81457     |
| Blast Sepolia Testnet     | 168587773 |
| BNB Smart Chain Mainnet   | 56        |
| BNB Smart Chain Testnet   | 97        |
| Celo Mainnet              | 42220     |
| Celo Sepolia Testnet      | 11142220  |
| Fraxtal Mainnet           | 252       |
| Fraxtal Testnet           | 2522      |
| Gnosis                    | 100       |
| HyperEVM Mainnet          | 999       |
| Katana Bokuto             | 737373    |
| Katana Mainnet            | 747474    |
| Linea Mainnet             | 59144     |
| Linea Sepolia Testnet     | 59141     |
| Mantle Mainnet            | 5000      |
| Mantle Sepolia Testnet    | 5003      |
| Memecore Testnet          | 43521     |
| Monad Testnet             | 10143     |
| Moonbase Alpha Testnet    | 1287      |
| Moonbeam Mainnet          | 1284      |
| Moonriver Mainnet         | 1285      |
| OP Mainnet                | 10        |
| OP Sepolia Testnet        | 11155420  |
| opBNB Mainnet             | 204       |
| opBNB Testnet             | 5611      |
| Polygon Amoy Testnet      | 80002     |
| Polygon Mainnet           | 137       |
| Scroll Mainnet            | 534352    |
| Scroll Sepolia Testnet    | 534351    |
| Sei Mainnet               | 1329      |
| Sei Testnet               | 1328      |
| Sonic Mainnet             | 146       |
| Sonic Testnet             | 14601     |
| Sophon Mainnet            | 50104     |
| Sophon Sepolia Testnet    | 531050104 |
| Swellchain Mainnet        | 1923      |
| Swellchain Testnet        | 1924      |
| Taiko Hoodi               | 167012    |
| Taiko Mainnet             | 167000    |
| Unichain Mainnet          | 130       |
| Unichain Sepolia Testnet  | 1301      |
| World Mainnet             | 480       |
| World Sepolia Testnet     | 4801      |
| XDC Apothem Testnet       | 51        |
| XDC Mainnet               | 50        |
| zkSync Mainnet            | 324       |
| zkSync Sepolia Testnet    | 300       |


================================================================================

# V2 Migration

Source: https://docs.etherscan.io/v2-migration.md
Extraction Method: markdown

# V2 Migration

<Tip>
  [Contract verification](/contract-verification/verify-with-foundry) using Hardhat/Remix/Foundry also support using a single Etherscan API key for all chains
</Tip>

As of **August 15th, 2025**, the legacy **Etherscan API V1 endpoints have been deprecated** in favor of the new **Etherscan API V2**, which introduces a unified multichain experience across 60+ supported networks 🌈.

You’ll see a deprecation error message like this if you’re still using V1:

```json  theme={null}
{
   "status":"0",
   "message":"NOTOK",
   "result":"You are using a deprecated V1 endpoint, switch to Etherscan API V2."
}
```

All existing endpoints remain compatible once you update them to the **V2 format**.

### How to Migrate

<Steps>
  <Step title="Create an Etherscan account">
    [**Sign up**](https://etherscan.io/register) if you don't have an account or if you're using other explorers like BaseScan, BscScan, Polygonscan, etc.
  </Step>

  <Step title="Create an Etherscan API Key">
    Under your Etherscan [**API dashboard**](https://etherscan.io/apidashboard), create a new key. This key can be used to access all [supported chains](/supported-chains) under API V2.
  </Step>

  <Step title="Migrating Endpoints from Etherscan API V1">
    Use `https://api.etherscan.io/v2/api` as your **base path**, and include a `chainid` for your target network (e.g., 1 for Ethereum).

    Before (V1):

    ```text  theme={null}
    https://api.etherscan.io/api?&action=balance&apikey=YourEtherscanApiKey
    ```

    After (V2):

    ```text  theme={null}
    https://api.etherscan.io/v2/api?chainid=1&action=balance&apikey=YourEtherscanApiKey
    ```
  </Step>

  <Step title="Migrating Endpoints from Other Explorers">
    Use the same base path (`https://api.etherscan.io/v2/api`) and include a `chainid` for the relevant chain from [this list](/supported-chains), in this case `137` for Polygon.

    Pass in your **Etherscan API key** instead of the old explorer-specific one.

    Before (PolygonScan V1):

    ```text  theme={null}
    https://api.polygonscan.com/api?&action=balance&apikey=YourPolygonscanApiKey
    ```

    After (V2):

    ```text  theme={null}
    https://api.etherscan.io/v2/api?chainid=137&action=balance&apikey=YourEtherscanApiKey
    ```
  </Step>
</Steps>


================================================================================

